Conflicts:
----------
Conflict in state 138 between rule 85 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 138 between rule 85 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 138 between rule 85 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 138 between rule 85 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 138 between rule 85 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 138 between rule 85 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 138 between rule 85 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 138 between rule 85 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 138 between rule 85 and token OP04_MATH_POW resolved as reduce.
Conflict in state 138 between rule 85 and token OP18_TERNARY resolved as reduce.
Conflict in state 138 between rule 85 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 138 between rule 85 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 138 between rule 85 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 138 between rule 85 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 138 between rule 85 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 138 between rule 85 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 155 between rule 99 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 155 between rule 99 and token OP04_MATH_POW resolved as shift.
Conflict in state 155 between rule 99 and token OP18_TERNARY resolved as reduce.
Conflict in state 155 between rule 99 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 155 between rule 99 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 155 between rule 99 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 155 between rule 99 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 155 between rule 99 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 155 between rule 99 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 155 between rule 99 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 155 between rule 99 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 155 between rule 99 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 155 between rule 99 and token OP08_STRING_CAT resolved as shift.
Conflict in state 155 between rule 99 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 155 between rule 99 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 155 between rule 99 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 181 between rule 92 and token OP18_TERNARY resolved as reduce.
Conflict in state 181 between rule 92 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 181 between rule 92 and token OP04_MATH_POW resolved as shift.
Conflict in state 181 between rule 92 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 181 between rule 92 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 181 between rule 92 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 181 between rule 92 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 181 between rule 92 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 181 between rule 92 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 181 between rule 92 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 181 between rule 92 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 181 between rule 92 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 181 between rule 92 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 181 between rule 92 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 181 between rule 92 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 181 between rule 92 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 193 between rule 110 and token OP08_STRING_CAT resolved as shift.
Conflict in state 193 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 193 between rule 110 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 193 between rule 110 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 193 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 193 between rule 110 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 193 between rule 110 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 193 between rule 110 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 193 between rule 110 and token OP18_TERNARY resolved as shift.
Conflict in state 193 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 193 between rule 110 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 193 between rule 110 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 193 between rule 110 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 193 between rule 110 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 193 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 193 between rule 110 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 205 between rule 85 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 205 between rule 85 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 205 between rule 85 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 205 between rule 85 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 205 between rule 85 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 205 between rule 85 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 205 between rule 85 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 205 between rule 85 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 205 between rule 85 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 205 between rule 85 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 205 between rule 85 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 205 between rule 85 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 205 between rule 85 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 205 between rule 85 and token OP18_TERNARY resolved as reduce.
Conflict in state 205 between rule 85 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 205 between rule 85 and token OP04_MATH_POW resolved as reduce.
Conflict in state 220 between rule 112 and token OP18_TERNARY resolved as shift.
Conflict in state 220 between rule 112 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 220 between rule 112 and token OP04_MATH_POW resolved as shift.
Conflict in state 220 between rule 112 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 220 between rule 112 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 220 between rule 112 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 220 between rule 112 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 220 between rule 112 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 220 between rule 112 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 220 between rule 112 and token OP08_STRING_CAT resolved as shift.
Conflict in state 220 between rule 112 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 220 between rule 112 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 220 between rule 112 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 220 between rule 112 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 220 between rule 112 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 220 between rule 112 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 221 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 221 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 221 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 221 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 221 between rule 106 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 221 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 221 between rule 106 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 221 between rule 106 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 221 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 221 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 221 between rule 106 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 221 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 221 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 221 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 221 between rule 106 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 221 between rule 106 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 222 between rule 96 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 222 between rule 96 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 222 between rule 96 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 222 between rule 96 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 222 between rule 96 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 222 between rule 96 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 222 between rule 96 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 222 between rule 96 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 222 between rule 96 and token OP18_TERNARY resolved as reduce.
Conflict in state 222 between rule 96 and token OP04_MATH_POW resolved as shift.
Conflict in state 222 between rule 96 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 222 between rule 96 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 222 between rule 96 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 222 between rule 96 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 222 between rule 96 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 222 between rule 96 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 223 between rule 91 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 223 between rule 91 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 223 between rule 91 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 223 between rule 91 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 223 between rule 91 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 223 between rule 91 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 223 between rule 91 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 223 between rule 91 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 223 between rule 91 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 223 between rule 91 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 223 between rule 91 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 223 between rule 91 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 223 between rule 91 and token OP04_MATH_POW resolved as shift.
Conflict in state 223 between rule 91 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 223 between rule 91 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 223 between rule 91 and token OP18_TERNARY resolved as reduce.
Conflict in state 227 between rule 98 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 227 between rule 98 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 227 between rule 98 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 227 between rule 98 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 227 between rule 98 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 227 between rule 98 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 227 between rule 98 and token OP08_STRING_CAT resolved as shift.
Conflict in state 227 between rule 98 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 227 between rule 98 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 227 between rule 98 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 227 between rule 98 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 227 between rule 98 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 227 between rule 98 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 227 between rule 98 and token OP04_MATH_POW resolved as shift.
Conflict in state 227 between rule 98 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 227 between rule 98 and token OP18_TERNARY resolved as reduce.
Conflict in state 228 between rule 102 and token OP08_STRING_CAT resolved as shift.
Conflict in state 228 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 228 between rule 102 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 228 between rule 102 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 228 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 228 between rule 102 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 228 between rule 102 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 228 between rule 102 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 228 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 228 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 228 between rule 102 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 228 between rule 102 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 228 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 228 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 228 between rule 102 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 228 between rule 102 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 230 between rule 103 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 230 between rule 103 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 230 between rule 103 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 230 between rule 103 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 230 between rule 103 and token OP12_COMPARE_EQ_NE resolved as error.
Conflict in state 230 between rule 103 and token OP18_TERNARY resolved as reduce.
Conflict in state 230 between rule 103 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 230 between rule 103 and token OP04_MATH_POW resolved as shift.
Conflict in state 230 between rule 103 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 230 between rule 103 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 230 between rule 103 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 230 between rule 103 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 230 between rule 103 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 230 between rule 103 and token OP08_STRING_CAT resolved as shift.
Conflict in state 230 between rule 103 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 230 between rule 103 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 231 between rule 111 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 231 between rule 111 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 231 between rule 111 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 231 between rule 111 and token OP08_STRING_CAT resolved as shift.
Conflict in state 231 between rule 111 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 231 between rule 111 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 231 between rule 111 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 231 between rule 111 and token OP04_MATH_POW resolved as shift.
Conflict in state 231 between rule 111 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 231 between rule 111 and token OP18_TERNARY resolved as shift.
Conflict in state 231 between rule 111 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 231 between rule 111 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 231 between rule 111 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 231 between rule 111 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 231 between rule 111 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 231 between rule 111 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 232 between rule 105 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 232 between rule 105 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 232 between rule 105 and token OP08_STRING_CAT resolved as shift.
Conflict in state 232 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 232 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 232 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 232 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 232 between rule 105 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 232 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 232 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 232 between rule 105 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 232 between rule 105 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 232 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 232 between rule 105 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 232 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 232 between rule 105 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 233 between rule 107 and token OP04_MATH_POW resolved as shift.
Conflict in state 233 between rule 107 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 233 between rule 107 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 233 between rule 107 and token OP18_TERNARY resolved as reduce.
Conflict in state 233 between rule 107 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 233 between rule 107 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 233 between rule 107 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 233 between rule 107 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 233 between rule 107 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 233 between rule 107 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 233 between rule 107 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 233 between rule 107 and token OP08_STRING_CAT resolved as shift.
Conflict in state 233 between rule 107 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 233 between rule 107 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 233 between rule 107 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 233 between rule 107 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 234 between rule 108 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 234 between rule 108 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 234 between rule 108 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 234 between rule 108 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 234 between rule 108 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 234 between rule 108 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 234 between rule 108 and token OP04_MATH_POW resolved as shift.
Conflict in state 234 between rule 108 and token OP18_TERNARY resolved as reduce.
Conflict in state 234 between rule 108 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 234 between rule 108 and token OP17_LIST_RANGE resolved as error.
Conflict in state 234 between rule 108 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 234 between rule 108 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 234 between rule 108 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 234 between rule 108 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 234 between rule 108 and token OP08_STRING_CAT resolved as shift.
Conflict in state 234 between rule 108 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 235 between rule 95 and token OP18_TERNARY resolved as reduce.
Conflict in state 235 between rule 95 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 235 between rule 95 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 235 between rule 95 and token OP04_MATH_POW resolved as shift.
Conflict in state 235 between rule 95 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 235 between rule 95 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 235 between rule 95 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 235 between rule 95 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 235 between rule 95 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 235 between rule 95 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 235 between rule 95 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 235 between rule 95 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 235 between rule 95 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 235 between rule 95 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 235 between rule 95 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 235 between rule 95 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 236 between rule 104 and token OP18_TERNARY resolved as reduce.
Conflict in state 236 between rule 104 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 236 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 236 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 236 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 236 between rule 104 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 236 between rule 104 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 236 between rule 104 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 236 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 236 between rule 104 and token OP08_STRING_CAT resolved as shift.
Conflict in state 236 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 236 between rule 104 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 236 between rule 104 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 236 between rule 104 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 236 between rule 104 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 236 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 237 between rule 97 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 237 between rule 97 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 237 between rule 97 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 237 between rule 97 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 237 between rule 97 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 237 between rule 97 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 237 between rule 97 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 237 between rule 97 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 237 between rule 97 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 237 between rule 97 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 237 between rule 97 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 237 between rule 97 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 237 between rule 97 and token OP04_MATH_POW resolved as shift.
Conflict in state 237 between rule 97 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 237 between rule 97 and token OP18_TERNARY resolved as reduce.
Conflict in state 237 between rule 97 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 367 between rule 108 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 367 between rule 108 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 367 between rule 108 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 367 between rule 108 and token OP08_STRING_CAT resolved as shift.
Conflict in state 367 between rule 108 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 367 between rule 108 and token OP17_LIST_RANGE resolved as error.
Conflict in state 367 between rule 108 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 367 between rule 108 and token OP04_MATH_POW resolved as shift.
Conflict in state 367 between rule 108 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 367 between rule 108 and token OP18_TERNARY resolved as reduce.
Conflict in state 367 between rule 108 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 367 between rule 108 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 367 between rule 108 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 367 between rule 108 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 367 between rule 108 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 367 between rule 108 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 377 between rule 87 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 377 between rule 87 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 377 between rule 87 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 377 between rule 87 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 377 between rule 87 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 377 between rule 87 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 377 between rule 87 and token OP08_STRING_CAT resolved as shift.
Conflict in state 377 between rule 87 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 377 between rule 87 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 377 between rule 87 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 377 between rule 87 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 377 between rule 87 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 377 between rule 87 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 377 between rule 87 and token OP04_MATH_POW resolved as shift.
Conflict in state 377 between rule 87 and token OP18_TERNARY resolved as shift.
Conflict in state 377 between rule 87 and token OP09_BITWISE_SHIFT resolved as shift.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header
22:	Module -> Package
23:	Module -> Class
24:	STAR-10 -> STAR-10 Critic
25:	STAR-10 -> /* empty */
26:	STAR-11 -> STAR-11 Include
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Constant
29:	STAR-12 -> /* empty */
30:	PLUS-13 -> PLUS-13 Subroutine
31:	PLUS-13 -> Subroutine
32:	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'
33:	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN
34:	PLUS-14 -> PLUS-14 WORD
35:	PLUS-14 -> WORD
36:	Critic -> '## no critic qw(' PLUS-14 ')'
37:	PLUS-15 -> PLUS-15 WORD
38:	PLUS-15 -> WORD
39:	Include -> 'use' WordScoped ';'
40:	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';'
41:	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';'
42:	OPTIONAL-16 -> SubroutineArguments
43:	OPTIONAL-16 -> /* empty */
44:	PLUS-17 -> PLUS-17 Operation
45:	PLUS-17 -> Operation
46:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'
47:	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
48:	STAR-19 -> STAR-19 PAREN-18
49:	STAR-19 -> /* empty */
50:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'
51:	STAR-20 -> STAR-20 Critic
52:	STAR-20 -> /* empty */
53:	STAR-21 -> STAR-21 Include
54:	STAR-21 -> /* empty */
55:	STAR-22 -> STAR-22 Constant
56:	STAR-22 -> /* empty */
57:	OPTIONAL-23 -> PropertiesClass
58:	OPTIONAL-23 -> /* empty */
59:	STAR-24 -> STAR-24 MethodOrSubroutine
60:	STAR-24 -> /* empty */
61:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'
62:	PAREN-25 -> OP21_LIST_COMMA HashEntryTyped
63:	STAR-26 -> STAR-26 PAREN-25
64:	STAR-26 -> /* empty */
65:	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 ')' ';'
66:	Properties -> 'our %properties = (' ')' ';' Critic
67:	PAREN-27 -> OP21_LIST_COMMA HashEntryTyped
68:	STAR-28 -> STAR-28 PAREN-27
69:	STAR-28 -> /* empty */
70:	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 ')' ';'
71:	OPTIONAL-29 -> MethodArguments
72:	OPTIONAL-29 -> /* empty */
73:	PLUS-30 -> PLUS-30 Operation
74:	PLUS-30 -> Operation
75:	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'
76:	PAREN-31 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
77:	STAR-32 -> STAR-32 PAREN-31
78:	STAR-32 -> /* empty */
79:	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'
80:	MethodOrSubroutine -> Method
81:	MethodOrSubroutine -> Subroutine
82:	Operation -> Expression ';'
83:	Operation -> Statement
84:	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')'
85:	Operator -> OP01_NAMED SubExpression
86:	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'
87:	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression
88:	Operator -> OP01_CLOSE FH_REF_SYMBOL
89:	Operator -> OP03_MATH_INC_DEC Variable
90:	Operator -> Variable OP03_MATH_INC_DEC
91:	Operator -> SubExpression OP04_MATH_POW SubExpression
92:	Operator -> OP05_LOGICAL_NEG SubExpression
93:	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')'
94:	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN
95:	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression
96:	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression
97:	Operator -> SubExpression OP08_STRING_CAT SubExpression
98:	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression
99:	Operator -> OP10_NAMED_UNARY SubExpression
100:	Operator -> OP10_NAMED_UNARY
101:	Operator -> OP10_STRINGIFY_UNARY SubExpression ')'
102:	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression
103:	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression
104:	Operator -> SubExpression OP13_BITWISE_AND SubExpression
105:	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression
106:	Operator -> SubExpression OP15_LOGICAL_AND SubExpression
107:	Operator -> SubExpression OP16_LOGICAL_OR SubExpression
108:	Operator -> SubExpression OP17_LIST_RANGE SubExpression
109:	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral
110:	Operator -> OP22_LOGICAL_NOT SubExpression
111:	Operator -> SubExpression OP23_LOGICAL_AND SubExpression
112:	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression
113:	PAREN-33 -> STDOUT_STDERR
114:	OPTIONAL-34 -> PAREN-33
115:	OPTIONAL-34 -> /* empty */
116:	OPTIONAL-35 -> ListElements
117:	OPTIONAL-35 -> /* empty */
118:	OperatorVoid -> OP01_PRINT OPTIONAL-34 ListElements ';'
119:	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ';'
120:	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-35 ';'
121:	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';'
122:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
123:	OPTIONAL-36 -> ListElements
124:	OPTIONAL-36 -> /* empty */
125:	OPTIONAL-37 -> ListElements
126:	OPTIONAL-37 -> /* empty */
127:	Expression -> Operator
128:	Expression -> WordScoped LPAREN OPTIONAL-36 ')'
129:	Expression -> Variable OP02_METHOD_THINARROW WORD LPAREN OPTIONAL-37 ')'
130:	SubExpression -> Expression
131:	SubExpression -> 'undef'
132:	SubExpression -> Literal
133:	SubExpression -> Variable
134:	SubExpression -> ArrayReference
135:	SubExpression -> ArrayDereferenced
136:	SubExpression -> HashReference
137:	SubExpression -> HashDereferenced
138:	SubExpression -> LBRACE '}'
139:	SubExpression -> LPAREN SubExpression ')'
140:	SubExpressionOrStdin -> SubExpression
141:	SubExpressionOrStdin -> STDIN
142:	PAREN-38 -> LoopLabel COLON
143:	OPTIONAL-39 -> PAREN-38
144:	OPTIONAL-39 -> /* empty */
145:	Statement -> Conditional
146:	Statement -> OPTIONAL-39 Loop
147:	Statement -> OperatorVoid
148:	Statement -> VariableDeclaration
149:	Statement -> VariableModification
150:	PAREN-40 -> 'elsif (' SubExpression ')' CodeBlock
151:	STAR-41 -> STAR-41 PAREN-40
152:	STAR-41 -> /* empty */
153:	PAREN-42 -> 'else' CodeBlock
154:	OPTIONAL-43 -> PAREN-42
155:	OPTIONAL-43 -> /* empty */
156:	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-41 OPTIONAL-43
157:	Loop -> LoopFor
158:	Loop -> LoopForEach
159:	Loop -> LoopWhile
160:	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock
161:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock
162:	LoopWhile -> 'while (' SubExpression ')' CodeBlock
163:	PLUS-44 -> PLUS-44 Operation
164:	PLUS-44 -> Operation
165:	CodeBlock -> LBRACE PLUS-44 '}'
166:	STAR-45 -> STAR-45 VariableRetrieval
167:	STAR-45 -> /* empty */
168:	Variable -> VARIABLE_SYMBOL STAR-45
169:	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']'
170:	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}'
171:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
172:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
173:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
174:	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
175:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';'
176:	PAREN-46 -> OP21_LIST_COMMA ListElement
177:	STAR-47 -> STAR-47 PAREN-46
178:	STAR-47 -> /* empty */
179:	PLUS-48 -> PLUS-48 WORD
180:	PLUS-48 -> WORD
181:	ListElements -> ListElement STAR-47
182:	ListElements -> OP01_QW LPAREN PLUS-48 ')'
183:	ListElement -> SubExpression
184:	ListElement -> TypeInner SubExpression
185:	ListElement -> KEYS_OR_VALUES HashDereferenced
186:	OPTIONAL-49 -> ListElements
187:	OPTIONAL-49 -> /* empty */
188:	ArrayReference -> LBRACKET OPTIONAL-49 ']'
189:	ArrayDereferenced -> '@{' Variable '}'
190:	ArrayDereferenced -> '@{' ArrayReference '}'
191:	OPTIONAL-50 -> TypeInner
192:	OPTIONAL-50 -> /* empty */
193:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-50 SubExpression
194:	HashEntry -> HashDereferenced
195:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression
196:	HashEntryTyped -> HashDereferenced
197:	PAREN-51 -> OP21_LIST_COMMA HashEntry
198:	STAR-52 -> STAR-52 PAREN-51
199:	STAR-52 -> /* empty */
200:	HashReference -> LBRACE HashEntry STAR-52 '}'
201:	HashDereferenced -> '%{' Variable '}'
202:	HashDereferenced -> '%{' HashReference '}'
203:	WordScoped -> WORD
204:	WordScoped -> WORD_SCOPED
205:	LoopLabel -> WORD
206:	Type -> WORD
207:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
208:	VariableOrLiteral -> Variable
209:	VariableOrLiteral -> Literal
210:	Literal -> LITERAL_STRING
211:	Literal -> LITERAL_NUMBER

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 4
	SHEBANG	shift, and go to state 2

	'package'	reduce using rule 20 (OPTIONAL-9)

	Program	go to state 6
	ModuleHeader	go to state 5
	OPTIONAL-9	go to state 8
	CompileUnit	go to state 7
	PLUS-2	go to state 1
	Critic	go to state 9
	PAREN-1	go to state 3

State 1:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 4

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)

	Critic	go to state 9
	PAREN-1	go to state 10
	ModuleHeader	go to state 5
	OPTIONAL-9	go to state 8

State 2:

	Program -> SHEBANG . OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 4

	'use strict;'	reduce using rule 7 (OPTIONAL-3)

	Critic	go to state 12
	OPTIONAL-3	go to state 11

State 3:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 4:

	Critic -> '## no critic qw(' . PLUS-14 ')'	(Rule 36)

	WORD	shift, and go to state 13

	PLUS-14	go to state 14

State 5:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 19

	'## no critic qw('	reduce using rule 25 (STAR-10)
	'our'	reduce using rule 25 (STAR-10)
	'use constant'	reduce using rule 25 (STAR-10)
	'use'	reduce using rule 25 (STAR-10)

	Module	go to state 16
	Package	go to state 17
	STAR-10	go to state 18
	Class	go to state 15

State 6:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 7:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 20

State 8:

	ModuleHeader -> OPTIONAL-9 . 'package' WordScoped ';' Header	(Rule 21)

	'package'	shift, and go to state 21

State 9:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 10:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 11:

	Program -> SHEBANG OPTIONAL-3 . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 23

	Header	go to state 22

State 12:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 13:

	PLUS-14 -> WORD .	(Rule 35)

	$default	reduce using rule 35 (PLUS-14)

State 14:

	PLUS-14 -> PLUS-14 . WORD	(Rule 34)
	Critic -> '## no critic qw(' PLUS-14 . ')'	(Rule 36)

	')'	shift, and go to state 25
	WORD	shift, and go to state 24

State 15:

	Module -> Class .	(Rule 23)

	$default	reduce using rule 23 (Module)

State 16:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 17:

	Module -> Package .	(Rule 22)

	$default	reduce using rule 22 (Module)

State 18:

	STAR-10 -> STAR-10 . Critic	(Rule 24)
	Package -> STAR-10 . STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'## no critic qw('	shift, and go to state 4

	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	'use'	reduce using rule 27 (STAR-11)

	Critic	go to state 26
	STAR-11	go to state 27

State 19:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	WordScoped	go to state 28

State 20:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 21:

	ModuleHeader -> OPTIONAL-9 'package' . WordScoped ';' Header	(Rule 21)

	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	WordScoped	go to state 31

State 22:

	Program -> SHEBANG OPTIONAL-3 Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 32

State 23:

	Header -> 'use strict;' . 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use warnings;'	shift, and go to state 33

State 24:

	PLUS-14 -> PLUS-14 WORD .	(Rule 34)

	$default	reduce using rule 34 (PLUS-14)

State 25:

	Critic -> '## no critic qw(' PLUS-14 ')' .	(Rule 36)

	$default	reduce using rule 36 (Critic)

State 26:

	STAR-10 -> STAR-10 Critic .	(Rule 24)

	$default	reduce using rule 24 (STAR-10)

State 27:

	STAR-11 -> STAR-11 . Include	(Rule 26)
	Package -> STAR-10 STAR-11 . STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'use'	shift, and go to state 36

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)

	STAR-12	go to state 35
	Include	go to state 34

State 28:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	')'	shift, and go to state 37

State 29:

	WordScoped -> WORD .	(Rule 203)

	$default	reduce using rule 203 (WordScoped)

State 30:

	WordScoped -> WORD_SCOPED .	(Rule 204)

	$default	reduce using rule 204 (WordScoped)

State 31:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped . ';' Header	(Rule 21)

	';'	shift, and go to state 38

State 32:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 4

	'%{'	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'for my integer'	reduce using rule 11 (STAR-5)
	'foreach my'	reduce using rule 11 (STAR-5)
	'if ('	reduce using rule 11 (STAR-5)
	'my'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'use'	reduce using rule 11 (STAR-5)
	'while ('	reduce using rule 11 (STAR-5)
	LBRACE	reduce using rule 11 (STAR-5)
	LBRACKET	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	LPAREN	reduce using rule 11 (STAR-5)
	OP01_CLOSE	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_OPEN	reduce using rule 11 (STAR-5)
	OP01_PRINT	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG_LPAREN	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP10_STRINGIFY_UNARY	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NOT	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)

	STAR-5	go to state 40
	Critic	go to state 39

State 33:

	Header -> 'use strict;' 'use warnings;' . 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use RPerl;'	shift, and go to state 41

State 34:

	STAR-11 -> STAR-11 Include .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 35:

	STAR-12 -> STAR-12 . Constant	(Rule 28)
	Package -> STAR-10 STAR-11 STAR-12 . PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 42
	'use constant'	shift, and go to state 43

	Subroutine	go to state 44
	PLUS-13	go to state 45
	Constant	go to state 46

State 36:

	Include -> 'use' . WordScoped ';'	(Rule 39)
	Include -> 'use' . WordScoped 'qw(' PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	WordScoped	go to state 47

State 37:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	';'	shift, and go to state 48

State 38:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' . Header	(Rule 21)

	'use strict;'	shift, and go to state 23

	Header	go to state 49

State 39:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 40:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use'	shift, and go to state 36

	'%{'	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'for my integer'	reduce using rule 13 (STAR-6)
	'foreach my'	reduce using rule 13 (STAR-6)
	'if ('	reduce using rule 13 (STAR-6)
	'my'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while ('	reduce using rule 13 (STAR-6)
	LBRACE	reduce using rule 13 (STAR-6)
	LBRACKET	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	LPAREN	reduce using rule 13 (STAR-6)
	OP01_CLOSE	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_OPEN	reduce using rule 13 (STAR-6)
	OP01_PRINT	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG_LPAREN	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP10_STRINGIFY_UNARY	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NOT	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)

	Include	go to state 50
	STAR-6	go to state 51

State 41:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' . 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'our'	shift, and go to state 52

State 42:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	WORD	shift, and go to state 53

	Type	go to state 54

State 43:

	Constant -> 'use constant' . WORD OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	WORD	shift, and go to state 55

State 44:

	PLUS-13 -> Subroutine .	(Rule 31)

	$default	reduce using rule 31 (PLUS-13)

State 45:

	PLUS-13 -> PLUS-13 . Subroutine	(Rule 30)
	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 . LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 42
	LITERAL_NUMBER	shift, and go to state 57

	Subroutine	go to state 56

State 46:

	STAR-12 -> STAR-12 Constant .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 47:

	Include -> 'use' WordScoped . ';'	(Rule 39)
	Include -> 'use' WordScoped . 'qw(' PLUS-15 ')' ';'	(Rule 40)

	';'	shift, and go to state 58
	'qw('	shift, and go to state 59

State 48:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'use'	shift, and go to state 36

	Include	go to state 60

State 49:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header .	(Rule 21)

	$default	reduce using rule 21 (ModuleHeader)

State 50:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 51:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 43

	'%{'	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'for my integer'	reduce using rule 15 (STAR-7)
	'foreach my'	reduce using rule 15 (STAR-7)
	'if ('	reduce using rule 15 (STAR-7)
	'my'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while ('	reduce using rule 15 (STAR-7)
	LBRACE	reduce using rule 15 (STAR-7)
	LBRACKET	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	LPAREN	reduce using rule 15 (STAR-7)
	OP01_CLOSE	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_OPEN	reduce using rule 15 (STAR-7)
	OP01_PRINT	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG_LPAREN	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP10_STRINGIFY_UNARY	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NOT	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)

	Constant	go to state 62
	STAR-7	go to state 61

State 52:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' . VERSION_NUMBER_ASSIGN	(Rule 33)

	VERSION_NUMBER_ASSIGN	shift, and go to state 63

State 53:

	Type -> WORD .	(Rule 206)

	$default	reduce using rule 206 (Type)

State 54:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	VARIABLE_SYMBOL	shift, and go to state 64

State 55:

	Constant -> 'use constant' WORD . OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	OP20_HASH_FATARROW	shift, and go to state 65

State 56:

	PLUS-13 -> PLUS-13 Subroutine .	(Rule 30)

	$default	reduce using rule 30 (PLUS-13)

State 57:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER . ';'	(Rule 32)

	';'	shift, and go to state 66

State 58:

	Include -> 'use' WordScoped ';' .	(Rule 39)

	$default	reduce using rule 39 (Include)

State 59:

	Include -> 'use' WordScoped 'qw(' . PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 67

	PLUS-15	go to state 68

State 60:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	$default	reduce using rule 52 (STAR-20)

	STAR-20	go to state 69

State 61:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'if ('	shift, and go to state 98
	'my'	shift, and go to state 114
	'our'	shift, and go to state 42
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 85
	OP01_NAMED_VOID	shift, and go to state 89
	OP01_OPEN	shift, and go to state 73
	OP01_PRINT	shift, and go to state 107
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP19_LOOP_CONTROL	shift, and go to state 101
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 70
	WORD_SCOPED	shift, and go to state 30

	'for my integer'	reduce using rule 144 (OPTIONAL-39)
	'foreach my'	reduce using rule 144 (OPTIONAL-39)
	'while ('	reduce using rule 144 (OPTIONAL-39)

	Subroutine	go to state 113
	VariableDeclaration	go to state 91
	OPTIONAL-39	go to state 108
	SubExpression	go to state 86
	Literal	go to state 109
	Variable	go to state 88
	HashReference	go to state 111
	PAREN-38	go to state 106
	OperatorVoid	go to state 82
	LoopLabel	go to state 83
	Statement	go to state 104
	ArrayReference	go to state 81
	WordScoped	go to state 80
	Conditional	go to state 79
	HashDereferenced	go to state 75
	Expression	go to state 95
	Operation	go to state 96
	VariableModification	go to state 97
	Operator	go to state 76
	PLUS-8	go to state 100
	ArrayDereferenced	go to state 72

State 62:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 63:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN .	(Rule 33)

	$default	reduce using rule 33 (Header)

State 64:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'= sub {'	shift, and go to state 115

State 65:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW . TypeInner Literal ';'	(Rule 41)

	'my'	shift, and go to state 117

	TypeInner	go to state 116

State 66:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';' .	(Rule 32)

	$default	reduce using rule 32 (Package)

State 67:

	PLUS-15 -> WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-15)

State 68:

	PLUS-15 -> PLUS-15 . WORD	(Rule 37)
	Include -> 'use' WordScoped 'qw(' PLUS-15 . ')' ';'	(Rule 40)

	')'	shift, and go to state 118
	WORD	shift, and go to state 119

State 69:

	STAR-20 -> STAR-20 . Critic	(Rule 51)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 . STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'## no critic qw('	shift, and go to state 4

	'our %properties = ('	reduce using rule 54 (STAR-21)
	'use constant'	reduce using rule 54 (STAR-21)
	'use'	reduce using rule 54 (STAR-21)

	Critic	go to state 120
	STAR-21	go to state 121

State 70:

	WordScoped -> WORD .	(Rule 203)
	LoopLabel -> WORD .	(Rule 205)

	COLON	reduce using rule 205 (LoopLabel)
	LPAREN	reduce using rule 203 (WordScoped)

State 71:

	Operator -> OP05_MATH_NEG_LPAREN . SubExpression ')'	(Rule 93)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	ArrayDereferenced	go to state 72
	ArrayReference	go to state 81
	WordScoped	go to state 80
	HashDereferenced	go to state 75
	Literal	go to state 109
	SubExpression	go to state 124
	Expression	go to state 122
	Operator	go to state 76
	Variable	go to state 123
	HashReference	go to state 111

State 72:

	SubExpression -> ArrayDereferenced .	(Rule 135)

	$default	reduce using rule 135 (SubExpression)

State 73:

	Operator -> OP01_OPEN . 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	'my'	shift, and go to state 126

State 74:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 189)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 190)

	LBRACKET	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 78

	Variable	go to state 127
	ArrayReference	go to state 128

State 75:

	SubExpression -> HashDereferenced .	(Rule 137)

	$default	reduce using rule 137 (SubExpression)

State 76:

	Expression -> Operator .	(Rule 127)

	$default	reduce using rule 127 (Expression)

State 77:

	Operator -> LPAREN . OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')'	(Rule 84)
	Operator -> LPAREN . OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'	(Rule 86)
	SubExpression -> LPAREN . SubExpression ')'	(Rule 139)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 130
	OP01_OPEN	shift, and go to state 73
	OP01_PRINT	shift, and go to state 131
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	WordScoped	go to state 80
	ArrayReference	go to state 81
	ArrayDereferenced	go to state 72
	Operator	go to state 76
	Variable	go to state 123
	HashReference	go to state 111
	SubExpression	go to state 129
	Expression	go to state 122
	HashDereferenced	go to state 75
	Literal	go to state 109

State 78:

	Variable -> VARIABLE_SYMBOL . STAR-45	(Rule 168)

	$default	reduce using rule 167 (STAR-45)

	STAR-45	go to state 132

State 79:

	Statement -> Conditional .	(Rule 145)

	$default	reduce using rule 145 (Statement)

State 80:

	Expression -> WordScoped . LPAREN OPTIONAL-36 ')'	(Rule 128)

	LPAREN	shift, and go to state 133

State 81:

	SubExpression -> ArrayReference .	(Rule 134)

	$default	reduce using rule 134 (SubExpression)

State 82:

	Statement -> OperatorVoid .	(Rule 147)

	$default	reduce using rule 147 (Statement)

State 83:

	PAREN-38 -> LoopLabel . COLON	(Rule 142)

	COLON	shift, and go to state 134

State 84:

	SubExpression -> 'undef' .	(Rule 131)

	$default	reduce using rule 131 (SubExpression)

State 85:

	Operator -> OP01_NAMED . SubExpression	(Rule 85)
	OperatorVoid -> OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ';'	(Rule 121)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'my'	shift, and go to state 117
	'undef'	shift, and go to state 84
	KEYS_OR_VALUES	shift, and go to state 135
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	HashReference	go to state 111
	Variable	go to state 123
	Operator	go to state 76
	Literal	go to state 109
	SubExpression	go to state 138
	Expression	go to state 122
	HashDereferenced	go to state 75
	ListElement	go to state 137
	WordScoped	go to state 80
	ArrayReference	go to state 81
	ArrayDereferenced	go to state 72
	TypeInner	go to state 136

State 86:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 151
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 139

State 87:

	Operator -> OP10_NAMED_UNARY . SubExpression	(Rule 99)
	Operator -> OP10_NAMED_UNARY .	(Rule 100)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	')'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP04_MATH_POW	reduce using rule 100 (Operator)
	OP06_REGEX_MATCH	reduce using rule 100 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 100 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 100 (Operator)
	OP08_STRING_CAT	reduce using rule 100 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 100 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 100 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 100 (Operator)
	OP13_BITWISE_AND	reduce using rule 100 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

	HashReference	go to state 111
	Variable	go to state 123
	Operator	go to state 76
	SubExpression	go to state 155
	Expression	go to state 122
	HashDereferenced	go to state 75
	Literal	go to state 109
	ArrayDereferenced	go to state 72
	WordScoped	go to state 80
	ArrayReference	go to state 81

State 88:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 90)
	Expression -> Variable . OP02_METHOD_THINARROW WORD LPAREN OPTIONAL-37 ')'	(Rule 129)
	SubExpression -> Variable .	(Rule 133)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 174)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY SubExpression ';'	(Rule 175)

	OP02_METHOD_THINARROW	shift, and go to state 159
	OP03_MATH_INC_DEC	shift, and go to state 156
	OP19_VARIABLE_ASSIGN	shift, and go to state 158
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 157

	OP04_MATH_POW	reduce using rule 133 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 133 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 133 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 133 (SubExpression)
	OP08_STRING_CAT	reduce using rule 133 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 133 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 133 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 133 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 133 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 133 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 133 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 133 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 133 (SubExpression)
	OP18_TERNARY	reduce using rule 133 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 133 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 133 (SubExpression)

State 89:

	OperatorVoid -> OP01_NAMED_VOID . OPTIONAL-35 ';'	(Rule 120)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'my'	shift, and go to state 117
	'undef'	shift, and go to state 84
	KEYS_OR_VALUES	shift, and go to state 135
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP01_QW	shift, and go to state 162
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	';'	reduce using rule 117 (OPTIONAL-35)

	HashDereferenced	go to state 75
	SubExpression	go to state 164
	Literal	go to state 109
	Expression	go to state 122
	Variable	go to state 123
	Operator	go to state 76
	HashReference	go to state 111
	ListElements	go to state 160
	OPTIONAL-35	go to state 161
	TypeInner	go to state 136
	ArrayDereferenced	go to state 72
	WordScoped	go to state 80
	ArrayReference	go to state 81
	ListElement	go to state 163

State 90:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 89)

	VARIABLE_SYMBOL	shift, and go to state 78

	Variable	go to state 165

State 91:

	Statement -> VariableDeclaration .	(Rule 148)

	$default	reduce using rule 148 (Statement)

State 92:

	Operator -> OP01_CLOSE . FH_REF_SYMBOL	(Rule 88)

	FH_REF_SYMBOL	shift, and go to state 166

State 93:

	ArrayReference -> LBRACKET . OPTIONAL-49 ']'	(Rule 188)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'my'	shift, and go to state 117
	'undef'	shift, and go to state 84
	KEYS_OR_VALUES	shift, and go to state 135
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP01_QW	shift, and go to state 162
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	']'	reduce using rule 187 (OPTIONAL-49)

	Expression	go to state 122
	Literal	go to state 109
	HashDereferenced	go to state 75
	SubExpression	go to state 164
	Variable	go to state 123
	Operator	go to state 76
	ListElements	go to state 168
	HashReference	go to state 111
	OPTIONAL-49	go to state 167
	TypeInner	go to state 136
	ArrayDereferenced	go to state 72
	WordScoped	go to state 80
	ArrayReference	go to state 81
	ListElement	go to state 163

State 94:

	Literal -> LITERAL_NUMBER .	(Rule 211)

	$default	reduce using rule 211 (Literal)

State 95:

	Operation -> Expression . ';'	(Rule 82)
	SubExpression -> Expression .	(Rule 130)

	';'	shift, and go to state 169

	OP04_MATH_POW	reduce using rule 130 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 130 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 130 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 130 (SubExpression)
	OP08_STRING_CAT	reduce using rule 130 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 130 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 130 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 130 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 130 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 130 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 130 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 130 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 130 (SubExpression)
	OP18_TERNARY	reduce using rule 130 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 130 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 130 (SubExpression)

State 96:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 97:

	Statement -> VariableModification .	(Rule 149)

	$default	reduce using rule 149 (Statement)

State 98:

	Conditional -> 'if (' . SubExpression ')' CodeBlock STAR-41 OPTIONAL-43	(Rule 156)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	WordScoped	go to state 80
	ArrayReference	go to state 81
	ArrayDereferenced	go to state 72
	Expression	go to state 122
	HashDereferenced	go to state 75
	Literal	go to state 109
	SubExpression	go to state 170
	Operator	go to state 76
	Variable	go to state 123
	HashReference	go to state 111

State 99:

	HashDereferenced -> '%{' . Variable '}'	(Rule 201)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 202)

	LBRACE	shift, and go to state 173
	VARIABLE_SYMBOL	shift, and go to state 78

	Variable	go to state 171
	HashReference	go to state 172

State 100:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'if ('	shift, and go to state 98
	'my'	shift, and go to state 114
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 85
	OP01_NAMED_VOID	shift, and go to state 89
	OP01_OPEN	shift, and go to state 73
	OP01_PRINT	shift, and go to state 107
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP19_LOOP_CONTROL	shift, and go to state 101
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 70
	WORD_SCOPED	shift, and go to state 30

	$end	reduce using rule 18 (Program)
	'for my integer'	reduce using rule 144 (OPTIONAL-39)
	'foreach my'	reduce using rule 144 (OPTIONAL-39)
	'while ('	reduce using rule 144 (OPTIONAL-39)

	ArrayDereferenced	go to state 72
	Operator	go to state 76
	VariableModification	go to state 97
	Expression	go to state 95
	Operation	go to state 174
	HashDereferenced	go to state 75
	Conditional	go to state 79
	Statement	go to state 104
	WordScoped	go to state 80
	ArrayReference	go to state 81
	PAREN-38	go to state 106
	OperatorVoid	go to state 82
	LoopLabel	go to state 83
	Variable	go to state 88
	HashReference	go to state 111
	OPTIONAL-39	go to state 108
	Literal	go to state 109
	SubExpression	go to state 86
	VariableDeclaration	go to state 91

State 101:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 122)

	WORD	shift, and go to state 176

	LoopLabel	go to state 175

State 102:

	SubExpression -> LBRACE . '}'	(Rule 138)
	HashReference -> LBRACE . HashEntry STAR-52 '}'	(Rule 200)

	'%{'	shift, and go to state 99
	'}'	shift, and go to state 177
	WORD	shift, and go to state 178

	HashEntry	go to state 180
	HashDereferenced	go to state 179

State 103:

	Literal -> LITERAL_STRING .	(Rule 210)

	$default	reduce using rule 210 (Literal)

State 104:

	Operation -> Statement .	(Rule 83)

	$default	reduce using rule 83 (Operation)

State 105:

	Operator -> OP05_LOGICAL_NEG . SubExpression	(Rule 92)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	Literal	go to state 109
	HashDereferenced	go to state 75
	SubExpression	go to state 181
	Expression	go to state 122
	HashReference	go to state 111
	Operator	go to state 76
	Variable	go to state 123
	WordScoped	go to state 80
	ArrayReference	go to state 81
	ArrayDereferenced	go to state 72

State 106:

	OPTIONAL-39 -> PAREN-38 .	(Rule 143)

	$default	reduce using rule 143 (OPTIONAL-39)

State 107:

	OperatorVoid -> OP01_PRINT . OPTIONAL-34 ListElements ';'	(Rule 118)
	OperatorVoid -> OP01_PRINT . FH_REF_SYMBOL_BRACES ListElements ';'	(Rule 119)

	FH_REF_SYMBOL_BRACES	shift, and go to state 183
	STDOUT_STDERR	shift, and go to state 185

	'%{'	reduce using rule 115 (OPTIONAL-34)
	'@{'	reduce using rule 115 (OPTIONAL-34)
	'my'	reduce using rule 115 (OPTIONAL-34)
	'undef'	reduce using rule 115 (OPTIONAL-34)
	KEYS_OR_VALUES	reduce using rule 115 (OPTIONAL-34)
	LBRACE	reduce using rule 115 (OPTIONAL-34)
	LBRACKET	reduce using rule 115 (OPTIONAL-34)
	LITERAL_NUMBER	reduce using rule 115 (OPTIONAL-34)
	LITERAL_STRING	reduce using rule 115 (OPTIONAL-34)
	LPAREN	reduce using rule 115 (OPTIONAL-34)
	OP01_CLOSE	reduce using rule 115 (OPTIONAL-34)
	OP01_NAMED	reduce using rule 115 (OPTIONAL-34)
	OP01_OPEN	reduce using rule 115 (OPTIONAL-34)
	OP01_QW	reduce using rule 115 (OPTIONAL-34)
	OP03_MATH_INC_DEC	reduce using rule 115 (OPTIONAL-34)
	OP05_LOGICAL_NEG	reduce using rule 115 (OPTIONAL-34)
	OP05_MATH_NEG_LPAREN	reduce using rule 115 (OPTIONAL-34)
	OP10_NAMED_UNARY	reduce using rule 115 (OPTIONAL-34)
	OP10_STRINGIFY_UNARY	reduce using rule 115 (OPTIONAL-34)
	OP22_LOGICAL_NOT	reduce using rule 115 (OPTIONAL-34)
	VARIABLE_SYMBOL	reduce using rule 115 (OPTIONAL-34)
	WORD	reduce using rule 115 (OPTIONAL-34)
	WORD_SCOPED	reduce using rule 115 (OPTIONAL-34)

	PAREN-33	go to state 184
	OPTIONAL-34	go to state 182

State 108:

	Statement -> OPTIONAL-39 . Loop	(Rule 146)

	'for my integer'	shift, and go to state 188
	'foreach my'	shift, and go to state 186
	'while ('	shift, and go to state 190

	Loop	go to state 191
	LoopWhile	go to state 189
	LoopForEach	go to state 187
	LoopFor	go to state 192

State 109:

	SubExpression -> Literal .	(Rule 132)

	$default	reduce using rule 132 (SubExpression)

State 110:

	Operator -> OP22_LOGICAL_NOT . SubExpression	(Rule 110)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	Expression	go to state 122
	SubExpression	go to state 193
	HashDereferenced	go to state 75
	Literal	go to state 109
	Variable	go to state 123
	Operator	go to state 76
	HashReference	go to state 111
	ArrayDereferenced	go to state 72
	ArrayReference	go to state 81
	WordScoped	go to state 80

State 111:

	SubExpression -> HashReference .	(Rule 136)

	$default	reduce using rule 136 (SubExpression)

State 112:

	Operator -> OP10_STRINGIFY_UNARY . SubExpression ')'	(Rule 101)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	Operator	go to state 76
	Variable	go to state 123
	HashReference	go to state 111
	Literal	go to state 109
	HashDereferenced	go to state 75
	SubExpression	go to state 194
	Expression	go to state 122
	ArrayDereferenced	go to state 72
	ArrayReference	go to state 81
	WordScoped	go to state 80

State 113:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 114:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 172)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 173)

	WORD	shift, and go to state 53

	Type	go to state 195

State 115:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'( my'	shift, and go to state 198

	'%{'	reduce using rule 43 (OPTIONAL-16)
	'@{'	reduce using rule 43 (OPTIONAL-16)
	'for my integer'	reduce using rule 43 (OPTIONAL-16)
	'foreach my'	reduce using rule 43 (OPTIONAL-16)
	'if ('	reduce using rule 43 (OPTIONAL-16)
	'my'	reduce using rule 43 (OPTIONAL-16)
	'undef'	reduce using rule 43 (OPTIONAL-16)
	'while ('	reduce using rule 43 (OPTIONAL-16)
	LBRACE	reduce using rule 43 (OPTIONAL-16)
	LBRACKET	reduce using rule 43 (OPTIONAL-16)
	LITERAL_NUMBER	reduce using rule 43 (OPTIONAL-16)
	LITERAL_STRING	reduce using rule 43 (OPTIONAL-16)
	LPAREN	reduce using rule 43 (OPTIONAL-16)
	OP01_CLOSE	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID	reduce using rule 43 (OPTIONAL-16)
	OP01_OPEN	reduce using rule 43 (OPTIONAL-16)
	OP01_PRINT	reduce using rule 43 (OPTIONAL-16)
	OP03_MATH_INC_DEC	reduce using rule 43 (OPTIONAL-16)
	OP05_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	OP05_MATH_NEG_LPAREN	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY	reduce using rule 43 (OPTIONAL-16)
	OP10_STRINGIFY_UNARY	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL	reduce using rule 43 (OPTIONAL-16)
	OP22_LOGICAL_NOT	reduce using rule 43 (OPTIONAL-16)
	VARIABLE_SYMBOL	reduce using rule 43 (OPTIONAL-16)
	WORD	reduce using rule 43 (OPTIONAL-16)
	WORD_SCOPED	reduce using rule 43 (OPTIONAL-16)

	SubroutineArguments	go to state 197
	OPTIONAL-16	go to state 196

State 116:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner . Literal ';'	(Rule 41)

	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103

	Literal	go to state 199

State 117:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 207)

	WORD	shift, and go to state 53

	Type	go to state 200

State 118:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' . ';'	(Rule 40)

	';'	shift, and go to state 201

State 119:

	PLUS-15 -> PLUS-15 WORD .	(Rule 37)

	$default	reduce using rule 37 (PLUS-15)

State 120:

	STAR-20 -> STAR-20 Critic .	(Rule 51)

	$default	reduce using rule 51 (STAR-20)

State 121:

	STAR-21 -> STAR-21 . Include	(Rule 53)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 . STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'use'	shift, and go to state 36

	'our %properties = ('	reduce using rule 56 (STAR-22)
	'use constant'	reduce using rule 56 (STAR-22)

	Include	go to state 203
	STAR-22	go to state 202

State 122:

	SubExpression -> Expression .	(Rule 130)

	$default	reduce using rule 130 (SubExpression)

State 123:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 90)
	Expression -> Variable . OP02_METHOD_THINARROW WORD LPAREN OPTIONAL-37 ')'	(Rule 129)
	SubExpression -> Variable .	(Rule 133)

	OP02_METHOD_THINARROW	shift, and go to state 159
	OP03_MATH_INC_DEC	shift, and go to state 156

	')'	reduce using rule 133 (SubExpression)
	';'	reduce using rule 133 (SubExpression)
	']'	reduce using rule 133 (SubExpression)
	'}'	reduce using rule 133 (SubExpression)
	OP04_MATH_POW	reduce using rule 133 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 133 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 133 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 133 (SubExpression)
	OP08_STRING_CAT	reduce using rule 133 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 133 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 133 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 133 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 133 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 133 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 133 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 133 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 133 (SubExpression)
	OP18_TERNARY	reduce using rule 133 (SubExpression)
	OP21_LIST_COMMA	reduce using rule 133 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 133 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 133 (SubExpression)

State 124:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> OP05_MATH_NEG_LPAREN SubExpression . ')'	(Rule 93)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	')'	shift, and go to state 204
	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 151
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 139

State 125:

	Operator -> OP01_NAMED . SubExpression	(Rule 85)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	HashReference	go to state 111
	Operator	go to state 76
	Variable	go to state 123
	SubExpression	go to state 205
	HashDereferenced	go to state 75
	Literal	go to state 109
	Expression	go to state 122
	ArrayReference	go to state 81
	WordScoped	go to state 80
	ArrayDereferenced	go to state 72

State 126:

	Operator -> OP01_OPEN 'my' . 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	'filehandle_ref'	shift, and go to state 206

State 127:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 189)

	'}'	shift, and go to state 207

State 128:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 190)

	'}'	shift, and go to state 208

State 129:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	SubExpression -> LPAREN SubExpression . ')'	(Rule 139)

	')'	shift, and go to state 209
	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 151
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 139

State 130:

	Operator -> OP01_NAMED . SubExpression	(Rule 85)
	Operator -> LPAREN OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ')'	(Rule 86)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'my'	shift, and go to state 117
	'undef'	shift, and go to state 84
	KEYS_OR_VALUES	shift, and go to state 135
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	HashDereferenced	go to state 75
	Expression	go to state 122
	SubExpression	go to state 138
	Literal	go to state 109
	Operator	go to state 76
	Variable	go to state 123
	HashReference	go to state 111
	ArrayReference	go to state 81
	WordScoped	go to state 80
	ListElement	go to state 210
	TypeInner	go to state 136
	ArrayDereferenced	go to state 72

State 131:

	Operator -> LPAREN OP01_PRINT . FH_REF_SYMBOL_BRACES ListElements ')'	(Rule 84)

	FH_REF_SYMBOL_BRACES	shift, and go to state 211

State 132:

	STAR-45 -> STAR-45 . VariableRetrieval	(Rule 166)
	Variable -> VARIABLE_SYMBOL STAR-45 .	(Rule 168)

	OP02_ARRAY_THINARROW	shift, and go to state 212
	OP02_HASH_THINARROW	shift, and go to state 213

	')'	reduce using rule 168 (Variable)
	';'	reduce using rule 168 (Variable)
	']'	reduce using rule 168 (Variable)
	'}'	reduce using rule 168 (Variable)
	COLON	reduce using rule 168 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 168 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 168 (Variable)
	OP04_MATH_POW	reduce using rule 168 (Variable)
	OP06_REGEX_MATCH	reduce using rule 168 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 168 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 168 (Variable)
	OP08_STRING_CAT	reduce using rule 168 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 168 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 168 (Variable)
	OP12_COMPARE_EQ_NE	reduce using rule 168 (Variable)
	OP13_BITWISE_AND	reduce using rule 168 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 168 (Variable)
	OP15_LOGICAL_AND	reduce using rule 168 (Variable)
	OP16_LOGICAL_OR	reduce using rule 168 (Variable)
	OP17_LIST_RANGE	reduce using rule 168 (Variable)
	OP18_TERNARY	reduce using rule 168 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 168 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 168 (Variable)
	OP21_LIST_COMMA	reduce using rule 168 (Variable)
	OP23_LOGICAL_AND	reduce using rule 168 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 168 (Variable)

	VariableRetrieval	go to state 214

State 133:

	Expression -> WordScoped LPAREN . OPTIONAL-36 ')'	(Rule 128)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'my'	shift, and go to state 117
	'undef'	shift, and go to state 84
	KEYS_OR_VALUES	shift, and go to state 135
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP01_QW	shift, and go to state 162
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	')'	reduce using rule 124 (OPTIONAL-36)

	OPTIONAL-36	go to state 215
	Expression	go to state 122
	SubExpression	go to state 164
	HashDereferenced	go to state 75
	Literal	go to state 109
	Variable	go to state 123
	Operator	go to state 76
	HashReference	go to state 111
	ListElements	go to state 216
	WordScoped	go to state 80
	ArrayReference	go to state 81
	ListElement	go to state 163
	TypeInner	go to state 136
	ArrayDereferenced	go to state 72

State 134:

	PAREN-38 -> LoopLabel COLON .	(Rule 142)

	$default	reduce using rule 142 (PAREN-38)

State 135:

	ListElement -> KEYS_OR_VALUES . HashDereferenced	(Rule 185)

	'%{'	shift, and go to state 99

	HashDereferenced	go to state 217

State 136:

	ListElement -> TypeInner . SubExpression	(Rule 184)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	ArrayDereferenced	go to state 72
	WordScoped	go to state 80
	ArrayReference	go to state 81
	SubExpression	go to state 218
	Literal	go to state 109
	Expression	go to state 122
	HashDereferenced	go to state 75
	HashReference	go to state 111
	Variable	go to state 123
	Operator	go to state 76

State 137:

	OperatorVoid -> OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ';'	(Rule 121)

	OP21_LIST_COMMA	shift, and go to state 219

State 138:

	Operator -> OP01_NAMED SubExpression .	(Rule 85)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	ListElement -> SubExpression .	(Rule 183)

	')'	reduce using rule 85 (Operator)
	';'	reduce using rule 85 (Operator)
	OP04_MATH_POW	reduce using rule 85 (Operator)
	OP06_REGEX_MATCH	reduce using rule 85 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 85 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 85 (Operator)
	OP08_STRING_CAT	reduce using rule 85 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 85 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 85 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 85 (Operator)
	OP13_BITWISE_AND	reduce using rule 85 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 85 (Operator)
	OP15_LOGICAL_AND	reduce using rule 85 (Operator)
	OP16_LOGICAL_OR	reduce using rule 85 (Operator)
	OP17_LIST_RANGE	reduce using rule 85 (Operator)
	OP18_TERNARY	reduce using rule 85 (Operator)
	OP21_LIST_COMMA	reduce using rule 183 (ListElement)
	OP23_LOGICAL_AND	reduce using rule 85 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 85 (Operator)

State 139:

	Operator -> SubExpression OP24_LOGICAL_OR_XOR . SubExpression	(Rule 112)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	HashReference	go to state 111
	Operator	go to state 76
	Variable	go to state 123
	Literal	go to state 109
	SubExpression	go to state 220
	HashDereferenced	go to state 75
	Expression	go to state 122
	ArrayReference	go to state 81
	WordScoped	go to state 80
	ArrayDereferenced	go to state 72

State 140:

	Operator -> SubExpression OP15_LOGICAL_AND . SubExpression	(Rule 106)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	WordScoped	go to state 80
	ArrayReference	go to state 81
	ArrayDereferenced	go to state 72
	HashReference	go to state 111
	Operator	go to state 76
	Variable	go to state 123
	Literal	go to state 109
	HashDereferenced	go to state 75
	Expression	go to state 122
	SubExpression	go to state 221

State 141:

	Operator -> SubExpression OP08_MATH_ADD_SUB . SubExpression	(Rule 96)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	Expression	go to state 122
	Literal	go to state 109
	SubExpression	go to state 222
	HashDereferenced	go to state 75
	HashReference	go to state 111
	Operator	go to state 76
	Variable	go to state 123
	WordScoped	go to state 80
	ArrayReference	go to state 81
	ArrayDereferenced	go to state 72

State 142:

	Operator -> SubExpression OP04_MATH_POW . SubExpression	(Rule 91)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	ArrayDereferenced	go to state 72
	ArrayReference	go to state 81
	WordScoped	go to state 80
	Literal	go to state 109
	Expression	go to state 122
	SubExpression	go to state 223
	HashDereferenced	go to state 75
	HashReference	go to state 111
	Operator	go to state 76
	Variable	go to state 123

State 143:

	Operator -> SubExpression OP18_TERNARY . VariableOrLiteral COLON VariableOrLiteral	(Rule 109)

	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	VARIABLE_SYMBOL	shift, and go to state 78

	VariableOrLiteral	go to state 225
	Literal	go to state 226
	Variable	go to state 224

State 144:

	Operator -> SubExpression OP09_BITWISE_SHIFT . SubExpression	(Rule 98)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	Literal	go to state 109
	Expression	go to state 122
	SubExpression	go to state 227
	HashDereferenced	go to state 75
	HashReference	go to state 111
	Operator	go to state 76
	Variable	go to state 123
	ArrayDereferenced	go to state 72
	ArrayReference	go to state 81
	WordScoped	go to state 80

State 145:

	Operator -> SubExpression OP11_COMPARE_LT_GT . SubExpression	(Rule 102)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	ArrayReference	go to state 81
	WordScoped	go to state 80
	ArrayDereferenced	go to state 72
	HashDereferenced	go to state 75
	Expression	go to state 122
	Literal	go to state 109
	SubExpression	go to state 228
	HashReference	go to state 111
	Operator	go to state 76
	Variable	go to state 123

State 146:

	Operator -> SubExpression OP06_REGEX_MATCH . OP06_REGEX_PATTERN	(Rule 94)

	OP06_REGEX_PATTERN	shift, and go to state 229

State 147:

	Operator -> SubExpression OP12_COMPARE_EQ_NE . SubExpression	(Rule 103)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	Variable	go to state 123
	Operator	go to state 76
	HashReference	go to state 111
	Literal	go to state 109
	Expression	go to state 122
	SubExpression	go to state 230
	HashDereferenced	go to state 75
	ArrayDereferenced	go to state 72
	WordScoped	go to state 80
	ArrayReference	go to state 81

State 148:

	Operator -> SubExpression OP23_LOGICAL_AND . SubExpression	(Rule 111)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	HashDereferenced	go to state 75
	Literal	go to state 109
	SubExpression	go to state 231
	Expression	go to state 122
	Variable	go to state 123
	Operator	go to state 76
	HashReference	go to state 111
	WordScoped	go to state 80
	ArrayReference	go to state 81
	ArrayDereferenced	go to state 72

State 149:

	Operator -> SubExpression OP14_BITWISE_OR_XOR . SubExpression	(Rule 105)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	WordScoped	go to state 80
	ArrayReference	go to state 81
	ArrayDereferenced	go to state 72
	Expression	go to state 122
	Literal	go to state 109
	SubExpression	go to state 232
	HashDereferenced	go to state 75
	Operator	go to state 76
	Variable	go to state 123
	HashReference	go to state 111

State 150:

	Operator -> SubExpression OP16_LOGICAL_OR . SubExpression	(Rule 107)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	HashDereferenced	go to state 75
	Expression	go to state 122
	Literal	go to state 109
	SubExpression	go to state 233
	HashReference	go to state 111
	Operator	go to state 76
	Variable	go to state 123
	ArrayReference	go to state 81
	WordScoped	go to state 80
	ArrayDereferenced	go to state 72

State 151:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 108)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	ArrayReference	go to state 81
	WordScoped	go to state 80
	ArrayDereferenced	go to state 72
	Expression	go to state 122
	HashDereferenced	go to state 75
	Literal	go to state 109
	SubExpression	go to state 234
	HashReference	go to state 111
	Operator	go to state 76
	Variable	go to state 123

State 152:

	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD . SubExpression	(Rule 95)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	HashDereferenced	go to state 75
	Literal	go to state 109
	SubExpression	go to state 235
	Expression	go to state 122
	Operator	go to state 76
	Variable	go to state 123
	HashReference	go to state 111
	WordScoped	go to state 80
	ArrayReference	go to state 81
	ArrayDereferenced	go to state 72

State 153:

	Operator -> SubExpression OP13_BITWISE_AND . SubExpression	(Rule 104)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	ArrayDereferenced	go to state 72
	WordScoped	go to state 80
	ArrayReference	go to state 81
	HashDereferenced	go to state 75
	SubExpression	go to state 236
	Expression	go to state 122
	Literal	go to state 109
	HashReference	go to state 111
	Operator	go to state 76
	Variable	go to state 123

State 154:

	Operator -> SubExpression OP08_STRING_CAT . SubExpression	(Rule 97)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	SubExpression	go to state 237
	Literal	go to state 109
	HashDereferenced	go to state 75
	Expression	go to state 122
	HashReference	go to state 111
	Variable	go to state 123
	Operator	go to state 76
	WordScoped	go to state 80
	ArrayReference	go to state 81
	ArrayDereferenced	go to state 72

State 155:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> OP10_NAMED_UNARY SubExpression .	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144

	')'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 99 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 99 (Operator)
	OP13_BITWISE_AND	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

State 156:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 90)

	$default	reduce using rule 90 (Operator)

State 157:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . SubExpression ';'	(Rule 175)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	Expression	go to state 122
	HashDereferenced	go to state 75
	Literal	go to state 109
	SubExpression	go to state 238
	HashReference	go to state 111
	Operator	go to state 76
	Variable	go to state 123
	WordScoped	go to state 80
	ArrayReference	go to state 81
	ArrayDereferenced	go to state 72

State 158:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 174)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	STDIN	shift, and go to state 239
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	SubExpressionOrStdin	go to state 241
	ArrayDereferenced	go to state 72
	WordScoped	go to state 80
	ArrayReference	go to state 81
	Variable	go to state 123
	Operator	go to state 76
	HashReference	go to state 111
	Expression	go to state 122
	HashDereferenced	go to state 75
	Literal	go to state 109
	SubExpression	go to state 240

State 159:

	Expression -> Variable OP02_METHOD_THINARROW . WORD LPAREN OPTIONAL-37 ')'	(Rule 129)

	WORD	shift, and go to state 242

State 160:

	OPTIONAL-35 -> ListElements .	(Rule 116)

	$default	reduce using rule 116 (OPTIONAL-35)

State 161:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-35 . ';'	(Rule 120)

	';'	shift, and go to state 243

State 162:

	ListElements -> OP01_QW . LPAREN PLUS-48 ')'	(Rule 182)

	LPAREN	shift, and go to state 244

State 163:

	ListElements -> ListElement . STAR-47	(Rule 181)

	$default	reduce using rule 178 (STAR-47)

	STAR-47	go to state 245

State 164:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	ListElement -> SubExpression .	(Rule 183)

	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 151
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 139

	')'	reduce using rule 183 (ListElement)
	';'	reduce using rule 183 (ListElement)
	']'	reduce using rule 183 (ListElement)
	OP21_LIST_COMMA	reduce using rule 183 (ListElement)

State 165:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 89)

	$default	reduce using rule 89 (Operator)

State 166:

	Operator -> OP01_CLOSE FH_REF_SYMBOL .	(Rule 88)

	$default	reduce using rule 88 (Operator)

State 167:

	ArrayReference -> LBRACKET OPTIONAL-49 . ']'	(Rule 188)

	']'	shift, and go to state 246

State 168:

	OPTIONAL-49 -> ListElements .	(Rule 186)

	$default	reduce using rule 186 (OPTIONAL-49)

State 169:

	Operation -> Expression ';' .	(Rule 82)

	$default	reduce using rule 82 (Operation)

State 170:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	Conditional -> 'if (' SubExpression . ')' CodeBlock STAR-41 OPTIONAL-43	(Rule 156)

	')'	shift, and go to state 247
	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 151
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 139

State 171:

	HashDereferenced -> '%{' Variable . '}'	(Rule 201)

	'}'	shift, and go to state 248

State 172:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 202)

	'}'	shift, and go to state 249

State 173:

	HashReference -> LBRACE . HashEntry STAR-52 '}'	(Rule 200)

	'%{'	shift, and go to state 99
	WORD	shift, and go to state 178

	HashDereferenced	go to state 179
	HashEntry	go to state 180

State 174:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 175:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 122)

	';'	shift, and go to state 250

State 176:

	LoopLabel -> WORD .	(Rule 205)

	$default	reduce using rule 205 (LoopLabel)

State 177:

	SubExpression -> LBRACE '}' .	(Rule 138)

	$default	reduce using rule 138 (SubExpression)

State 178:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-50 SubExpression	(Rule 193)

	OP20_HASH_FATARROW	shift, and go to state 251

State 179:

	HashEntry -> HashDereferenced .	(Rule 194)

	$default	reduce using rule 194 (HashEntry)

State 180:

	HashReference -> LBRACE HashEntry . STAR-52 '}'	(Rule 200)

	$default	reduce using rule 199 (STAR-52)

	STAR-52	go to state 252

State 181:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> OP05_LOGICAL_NEG SubExpression .	(Rule 92)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 142

	')'	reduce using rule 92 (Operator)
	';'	reduce using rule 92 (Operator)
	']'	reduce using rule 92 (Operator)
	'}'	reduce using rule 92 (Operator)
	OP06_REGEX_MATCH	reduce using rule 92 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 92 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 92 (Operator)
	OP08_STRING_CAT	reduce using rule 92 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 92 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 92 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 92 (Operator)
	OP13_BITWISE_AND	reduce using rule 92 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 92 (Operator)
	OP15_LOGICAL_AND	reduce using rule 92 (Operator)
	OP16_LOGICAL_OR	reduce using rule 92 (Operator)
	OP17_LIST_RANGE	reduce using rule 92 (Operator)
	OP18_TERNARY	reduce using rule 92 (Operator)
	OP21_LIST_COMMA	reduce using rule 92 (Operator)
	OP23_LOGICAL_AND	reduce using rule 92 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 92 (Operator)

State 182:

	OperatorVoid -> OP01_PRINT OPTIONAL-34 . ListElements ';'	(Rule 118)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'my'	shift, and go to state 117
	'undef'	shift, and go to state 84
	KEYS_OR_VALUES	shift, and go to state 135
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP01_QW	shift, and go to state 162
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	HashDereferenced	go to state 75
	SubExpression	go to state 164
	Expression	go to state 122
	Literal	go to state 109
	Variable	go to state 123
	Operator	go to state 76
	HashReference	go to state 111
	ListElements	go to state 253
	WordScoped	go to state 80
	ArrayReference	go to state 81
	ListElement	go to state 163
	TypeInner	go to state 136
	ArrayDereferenced	go to state 72

State 183:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES . ListElements ';'	(Rule 119)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'my'	shift, and go to state 117
	'undef'	shift, and go to state 84
	KEYS_OR_VALUES	shift, and go to state 135
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP01_QW	shift, and go to state 162
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	WordScoped	go to state 80
	ArrayReference	go to state 81
	ListElement	go to state 163
	TypeInner	go to state 136
	ArrayDereferenced	go to state 72
	Expression	go to state 122
	Literal	go to state 109
	HashDereferenced	go to state 75
	SubExpression	go to state 164
	HashReference	go to state 111
	ListElements	go to state 254
	Variable	go to state 123
	Operator	go to state 76

State 184:

	OPTIONAL-34 -> PAREN-33 .	(Rule 114)

	$default	reduce using rule 114 (OPTIONAL-34)

State 185:

	PAREN-33 -> STDOUT_STDERR .	(Rule 113)

	$default	reduce using rule 113 (PAREN-33)

State 186:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 161)

	WORD	shift, and go to state 53

	Type	go to state 255

State 187:

	Loop -> LoopForEach .	(Rule 158)

	$default	reduce using rule 158 (Loop)

State 188:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 160)

	VARIABLE_SYMBOL	shift, and go to state 256

State 189:

	Loop -> LoopWhile .	(Rule 159)

	$default	reduce using rule 159 (Loop)

State 190:

	LoopWhile -> 'while (' . SubExpression ')' CodeBlock	(Rule 162)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	HashDereferenced	go to state 75
	Expression	go to state 122
	Literal	go to state 109
	SubExpression	go to state 257
	HashReference	go to state 111
	Variable	go to state 123
	Operator	go to state 76
	WordScoped	go to state 80
	ArrayReference	go to state 81
	ArrayDereferenced	go to state 72

State 191:

	Statement -> OPTIONAL-39 Loop .	(Rule 146)

	$default	reduce using rule 146 (Statement)

State 192:

	Loop -> LoopFor .	(Rule 157)

	$default	reduce using rule 157 (Loop)

State 193:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> OP22_LOGICAL_NOT SubExpression .	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 151
	OP18_TERNARY	shift, and go to state 143

	')'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP23_LOGICAL_AND	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 194:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> OP10_STRINGIFY_UNARY SubExpression . ')'	(Rule 101)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	')'	shift, and go to state 258
	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 151
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 139

State 195:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 172)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 173)

	VARIABLE_SYMBOL	shift, and go to state 259

State 196:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 . PLUS-17 '}' ';'	(Rule 46)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'if ('	shift, and go to state 98
	'my'	shift, and go to state 114
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 85
	OP01_NAMED_VOID	shift, and go to state 89
	OP01_OPEN	shift, and go to state 73
	OP01_PRINT	shift, and go to state 107
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP19_LOOP_CONTROL	shift, and go to state 101
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 70
	WORD_SCOPED	shift, and go to state 30

	'for my integer'	reduce using rule 144 (OPTIONAL-39)
	'foreach my'	reduce using rule 144 (OPTIONAL-39)
	'while ('	reduce using rule 144 (OPTIONAL-39)

	LoopLabel	go to state 83
	PAREN-38	go to state 106
	OperatorVoid	go to state 82
	PLUS-17	go to state 261
	ArrayReference	go to state 81
	WordScoped	go to state 80
	Statement	go to state 104
	VariableDeclaration	go to state 91
	SubExpression	go to state 86
	Literal	go to state 109
	OPTIONAL-39	go to state 108
	HashReference	go to state 111
	Variable	go to state 88
	ArrayDereferenced	go to state 72
	Conditional	go to state 79
	Operation	go to state 260
	Expression	go to state 95
	HashDereferenced	go to state 75
	Operator	go to state 76
	VariableModification	go to state 97

State 197:

	OPTIONAL-16 -> SubroutineArguments .	(Rule 42)

	$default	reduce using rule 42 (OPTIONAL-16)

State 198:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	WORD	shift, and go to state 53

	Type	go to state 262

State 199:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal . ';'	(Rule 41)

	';'	shift, and go to state 263

State 200:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 207)

	'$TYPED_'	shift, and go to state 264

State 201:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';' .	(Rule 40)

	$default	reduce using rule 40 (Include)

State 202:

	STAR-22 -> STAR-22 . Constant	(Rule 55)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 . Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'our %properties = ('	shift, and go to state 266
	'use constant'	shift, and go to state 43

	Properties	go to state 265
	Constant	go to state 267

State 203:

	STAR-21 -> STAR-21 Include .	(Rule 53)

	$default	reduce using rule 53 (STAR-21)

State 204:

	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')' .	(Rule 93)

	$default	reduce using rule 93 (Operator)

State 205:

	Operator -> OP01_NAMED SubExpression .	(Rule 85)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	')'	reduce using rule 85 (Operator)
	';'	reduce using rule 85 (Operator)
	']'	reduce using rule 85 (Operator)
	'}'	reduce using rule 85 (Operator)
	OP04_MATH_POW	reduce using rule 85 (Operator)
	OP06_REGEX_MATCH	reduce using rule 85 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 85 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 85 (Operator)
	OP08_STRING_CAT	reduce using rule 85 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 85 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 85 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 85 (Operator)
	OP13_BITWISE_AND	reduce using rule 85 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 85 (Operator)
	OP15_LOGICAL_AND	reduce using rule 85 (Operator)
	OP16_LOGICAL_OR	reduce using rule 85 (Operator)
	OP17_LIST_RANGE	reduce using rule 85 (Operator)
	OP18_TERNARY	reduce using rule 85 (Operator)
	OP21_LIST_COMMA	reduce using rule 85 (Operator)
	OP23_LOGICAL_AND	reduce using rule 85 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 85 (Operator)

State 206:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' . FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	FH_REF_SYMBOL	shift, and go to state 268

State 207:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 189)

	$default	reduce using rule 189 (ArrayDereferenced)

State 208:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 190)

	$default	reduce using rule 190 (ArrayDereferenced)

State 209:

	SubExpression -> LPAREN SubExpression ')' .	(Rule 139)

	$default	reduce using rule 139 (SubExpression)

State 210:

	Operator -> LPAREN OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ')'	(Rule 86)

	OP21_LIST_COMMA	shift, and go to state 269

State 211:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES . ListElements ')'	(Rule 84)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'my'	shift, and go to state 117
	'undef'	shift, and go to state 84
	KEYS_OR_VALUES	shift, and go to state 135
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP01_QW	shift, and go to state 162
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	TypeInner	go to state 136
	ArrayDereferenced	go to state 72
	WordScoped	go to state 80
	ArrayReference	go to state 81
	ListElement	go to state 163
	HashDereferenced	go to state 75
	SubExpression	go to state 164
	Expression	go to state 122
	Literal	go to state 109
	Operator	go to state 76
	Variable	go to state 123
	HashReference	go to state 111
	ListElements	go to state 270

State 212:

	VariableRetrieval -> OP02_ARRAY_THINARROW . SubExpression ']'	(Rule 169)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	ArrayDereferenced	go to state 72
	WordScoped	go to state 80
	ArrayReference	go to state 81
	Literal	go to state 109
	Expression	go to state 122
	HashDereferenced	go to state 75
	SubExpression	go to state 271
	HashReference	go to state 111
	Variable	go to state 123
	Operator	go to state 76

State 213:

	VariableRetrieval -> OP02_HASH_THINARROW . SubExpression '}'	(Rule 170)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 171)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 272
	WORD_SCOPED	shift, and go to state 30

	ArrayReference	go to state 81
	WordScoped	go to state 80
	ArrayDereferenced	go to state 72
	Variable	go to state 123
	Operator	go to state 76
	HashReference	go to state 111
	Expression	go to state 122
	Literal	go to state 109
	HashDereferenced	go to state 75
	SubExpression	go to state 273

State 214:

	STAR-45 -> STAR-45 VariableRetrieval .	(Rule 166)

	$default	reduce using rule 166 (STAR-45)

State 215:

	Expression -> WordScoped LPAREN OPTIONAL-36 . ')'	(Rule 128)

	')'	shift, and go to state 274

State 216:

	OPTIONAL-36 -> ListElements .	(Rule 123)

	$default	reduce using rule 123 (OPTIONAL-36)

State 217:

	ListElement -> KEYS_OR_VALUES HashDereferenced .	(Rule 185)

	$default	reduce using rule 185 (ListElement)

State 218:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	ListElement -> TypeInner SubExpression .	(Rule 184)

	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 151
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 139

	')'	reduce using rule 184 (ListElement)
	';'	reduce using rule 184 (ListElement)
	']'	reduce using rule 184 (ListElement)
	OP21_LIST_COMMA	reduce using rule 184 (ListElement)

State 219:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ';'	(Rule 121)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'my'	shift, and go to state 117
	'undef'	shift, and go to state 84
	KEYS_OR_VALUES	shift, and go to state 135
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP01_QW	shift, and go to state 162
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	Variable	go to state 123
	Operator	go to state 76
	HashReference	go to state 111
	ListElements	go to state 275
	HashDereferenced	go to state 75
	Expression	go to state 122
	Literal	go to state 109
	SubExpression	go to state 164
	ListElement	go to state 163
	ArrayReference	go to state 81
	WordScoped	go to state 80
	ArrayDereferenced	go to state 72
	TypeInner	go to state 136

State 220:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression .	(Rule 112)

	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 151
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 148

	')'	reduce using rule 112 (Operator)
	';'	reduce using rule 112 (Operator)
	']'	reduce using rule 112 (Operator)
	'}'	reduce using rule 112 (Operator)
	OP21_LIST_COMMA	reduce using rule 112 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 112 (Operator)

State 221:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression OP15_LOGICAL_AND SubExpression .	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 149

	')'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP15_LOGICAL_AND	reduce using rule 106 (Operator)
	OP16_LOGICAL_OR	reduce using rule 106 (Operator)
	OP17_LIST_RANGE	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 222:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression .	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152

	')'	reduce using rule 96 (Operator)
	';'	reduce using rule 96 (Operator)
	']'	reduce using rule 96 (Operator)
	'}'	reduce using rule 96 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 96 (Operator)
	OP08_STRING_CAT	reduce using rule 96 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 96 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 96 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 96 (Operator)
	OP13_BITWISE_AND	reduce using rule 96 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 96 (Operator)
	OP15_LOGICAL_AND	reduce using rule 96 (Operator)
	OP16_LOGICAL_OR	reduce using rule 96 (Operator)
	OP17_LIST_RANGE	reduce using rule 96 (Operator)
	OP18_TERNARY	reduce using rule 96 (Operator)
	OP21_LIST_COMMA	reduce using rule 96 (Operator)
	OP23_LOGICAL_AND	reduce using rule 96 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 96 (Operator)

State 223:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression OP04_MATH_POW SubExpression .	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 142

	')'	reduce using rule 91 (Operator)
	';'	reduce using rule 91 (Operator)
	']'	reduce using rule 91 (Operator)
	'}'	reduce using rule 91 (Operator)
	OP06_REGEX_MATCH	reduce using rule 91 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 91 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 91 (Operator)
	OP08_STRING_CAT	reduce using rule 91 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 91 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 91 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 91 (Operator)
	OP13_BITWISE_AND	reduce using rule 91 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 91 (Operator)
	OP15_LOGICAL_AND	reduce using rule 91 (Operator)
	OP16_LOGICAL_OR	reduce using rule 91 (Operator)
	OP17_LIST_RANGE	reduce using rule 91 (Operator)
	OP18_TERNARY	reduce using rule 91 (Operator)
	OP21_LIST_COMMA	reduce using rule 91 (Operator)
	OP23_LOGICAL_AND	reduce using rule 91 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 91 (Operator)

State 224:

	VariableOrLiteral -> Variable .	(Rule 208)

	$default	reduce using rule 208 (VariableOrLiteral)

State 225:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral . COLON VariableOrLiteral	(Rule 109)

	COLON	shift, and go to state 276

State 226:

	VariableOrLiteral -> Literal .	(Rule 209)

	$default	reduce using rule 209 (VariableOrLiteral)

State 227:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression .	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154

	')'	reduce using rule 98 (Operator)
	';'	reduce using rule 98 (Operator)
	']'	reduce using rule 98 (Operator)
	'}'	reduce using rule 98 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 98 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 98 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 98 (Operator)
	OP13_BITWISE_AND	reduce using rule 98 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 98 (Operator)
	OP15_LOGICAL_AND	reduce using rule 98 (Operator)
	OP16_LOGICAL_OR	reduce using rule 98 (Operator)
	OP17_LIST_RANGE	reduce using rule 98 (Operator)
	OP18_TERNARY	reduce using rule 98 (Operator)
	OP21_LIST_COMMA	reduce using rule 98 (Operator)
	OP23_LOGICAL_AND	reduce using rule 98 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 98 (Operator)

State 228:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression .	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 102 (Operator)
	';'	reduce using rule 102 (Operator)
	']'	reduce using rule 102 (Operator)
	'}'	reduce using rule 102 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 102 (Operator)
	OP13_BITWISE_AND	reduce using rule 102 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 102 (Operator)
	OP15_LOGICAL_AND	reduce using rule 102 (Operator)
	OP16_LOGICAL_OR	reduce using rule 102 (Operator)
	OP17_LIST_RANGE	reduce using rule 102 (Operator)
	OP18_TERNARY	reduce using rule 102 (Operator)
	OP21_LIST_COMMA	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 229:

	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN .	(Rule 94)

	$default	reduce using rule 94 (Operator)

State 230:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression .	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145

	OP12_COMPARE_EQ_NE	error (nonassociative)

	')'	reduce using rule 103 (Operator)
	';'	reduce using rule 103 (Operator)
	']'	reduce using rule 103 (Operator)
	'}'	reduce using rule 103 (Operator)
	OP13_BITWISE_AND	reduce using rule 103 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 103 (Operator)
	OP15_LOGICAL_AND	reduce using rule 103 (Operator)
	OP16_LOGICAL_OR	reduce using rule 103 (Operator)
	OP17_LIST_RANGE	reduce using rule 103 (Operator)
	OP18_TERNARY	reduce using rule 103 (Operator)
	OP21_LIST_COMMA	reduce using rule 103 (Operator)
	OP23_LOGICAL_AND	reduce using rule 103 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 103 (Operator)

State 231:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression OP23_LOGICAL_AND SubExpression .	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 151
	OP18_TERNARY	shift, and go to state 143

	')'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP23_LOGICAL_AND	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

State 232:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression .	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 153

	')'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 105 (Operator)
	OP15_LOGICAL_AND	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 233:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression OP16_LOGICAL_OR SubExpression .	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 140

	')'	reduce using rule 107 (Operator)
	';'	reduce using rule 107 (Operator)
	']'	reduce using rule 107 (Operator)
	'}'	reduce using rule 107 (Operator)
	OP16_LOGICAL_OR	reduce using rule 107 (Operator)
	OP17_LIST_RANGE	reduce using rule 107 (Operator)
	OP18_TERNARY	reduce using rule 107 (Operator)
	OP21_LIST_COMMA	reduce using rule 107 (Operator)
	OP23_LOGICAL_AND	reduce using rule 107 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 107 (Operator)

State 234:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 150

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 108 (Operator)
	';'	reduce using rule 108 (Operator)
	']'	reduce using rule 108 (Operator)
	'}'	reduce using rule 108 (Operator)
	OP18_TERNARY	reduce using rule 108 (Operator)
	OP21_LIST_COMMA	reduce using rule 108 (Operator)
	OP23_LOGICAL_AND	reduce using rule 108 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 108 (Operator)

State 235:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression .	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146

	')'	reduce using rule 95 (Operator)
	';'	reduce using rule 95 (Operator)
	']'	reduce using rule 95 (Operator)
	'}'	reduce using rule 95 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 95 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 95 (Operator)
	OP08_STRING_CAT	reduce using rule 95 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 95 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 95 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 95 (Operator)
	OP13_BITWISE_AND	reduce using rule 95 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 95 (Operator)
	OP15_LOGICAL_AND	reduce using rule 95 (Operator)
	OP16_LOGICAL_OR	reduce using rule 95 (Operator)
	OP17_LIST_RANGE	reduce using rule 95 (Operator)
	OP18_TERNARY	reduce using rule 95 (Operator)
	OP21_LIST_COMMA	reduce using rule 95 (Operator)
	OP23_LOGICAL_AND	reduce using rule 95 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 95 (Operator)

State 236:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression OP13_BITWISE_AND SubExpression .	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147

	')'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP13_BITWISE_AND	reduce using rule 104 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 104 (Operator)
	OP15_LOGICAL_AND	reduce using rule 104 (Operator)
	OP16_LOGICAL_OR	reduce using rule 104 (Operator)
	OP17_LIST_RANGE	reduce using rule 104 (Operator)
	OP18_TERNARY	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 237:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression OP08_STRING_CAT SubExpression .	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141

	')'	reduce using rule 97 (Operator)
	';'	reduce using rule 97 (Operator)
	']'	reduce using rule 97 (Operator)
	'}'	reduce using rule 97 (Operator)
	OP08_STRING_CAT	reduce using rule 97 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 97 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 97 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 97 (Operator)
	OP13_BITWISE_AND	reduce using rule 97 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 97 (Operator)
	OP15_LOGICAL_AND	reduce using rule 97 (Operator)
	OP16_LOGICAL_OR	reduce using rule 97 (Operator)
	OP17_LIST_RANGE	reduce using rule 97 (Operator)
	OP18_TERNARY	reduce using rule 97 (Operator)
	OP21_LIST_COMMA	reduce using rule 97 (Operator)
	OP23_LOGICAL_AND	reduce using rule 97 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 97 (Operator)

State 238:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression . ';'	(Rule 175)

	';'	shift, and go to state 277
	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 151
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 139

State 239:

	SubExpressionOrStdin -> STDIN .	(Rule 141)

	$default	reduce using rule 141 (SubExpressionOrStdin)

State 240:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	SubExpressionOrStdin -> SubExpression .	(Rule 140)

	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 151
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 139

	';'	reduce using rule 140 (SubExpressionOrStdin)

State 241:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 174)

	';'	shift, and go to state 278

State 242:

	Expression -> Variable OP02_METHOD_THINARROW WORD . LPAREN OPTIONAL-37 ')'	(Rule 129)

	LPAREN	shift, and go to state 279

State 243:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-35 ';' .	(Rule 120)

	$default	reduce using rule 120 (OperatorVoid)

State 244:

	ListElements -> OP01_QW LPAREN . PLUS-48 ')'	(Rule 182)

	WORD	shift, and go to state 281

	PLUS-48	go to state 280

State 245:

	STAR-47 -> STAR-47 . PAREN-46	(Rule 177)
	ListElements -> ListElement STAR-47 .	(Rule 181)

	OP21_LIST_COMMA	shift, and go to state 283

	')'	reduce using rule 181 (ListElements)
	';'	reduce using rule 181 (ListElements)
	']'	reduce using rule 181 (ListElements)

	PAREN-46	go to state 282

State 246:

	ArrayReference -> LBRACKET OPTIONAL-49 ']' .	(Rule 188)

	$default	reduce using rule 188 (ArrayReference)

State 247:

	Conditional -> 'if (' SubExpression ')' . CodeBlock STAR-41 OPTIONAL-43	(Rule 156)

	LBRACE	shift, and go to state 284

	CodeBlock	go to state 285

State 248:

	HashDereferenced -> '%{' Variable '}' .	(Rule 201)

	$default	reduce using rule 201 (HashDereferenced)

State 249:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 202)

	$default	reduce using rule 202 (HashDereferenced)

State 250:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 122)

	$default	reduce using rule 122 (OperatorVoid)

State 251:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-50 SubExpression	(Rule 193)

	'my'	shift, and go to state 117

	'%{'	reduce using rule 192 (OPTIONAL-50)
	'@{'	reduce using rule 192 (OPTIONAL-50)
	'undef'	reduce using rule 192 (OPTIONAL-50)
	LBRACE	reduce using rule 192 (OPTIONAL-50)
	LBRACKET	reduce using rule 192 (OPTIONAL-50)
	LITERAL_NUMBER	reduce using rule 192 (OPTIONAL-50)
	LITERAL_STRING	reduce using rule 192 (OPTIONAL-50)
	LPAREN	reduce using rule 192 (OPTIONAL-50)
	OP01_CLOSE	reduce using rule 192 (OPTIONAL-50)
	OP01_NAMED	reduce using rule 192 (OPTIONAL-50)
	OP01_OPEN	reduce using rule 192 (OPTIONAL-50)
	OP03_MATH_INC_DEC	reduce using rule 192 (OPTIONAL-50)
	OP05_LOGICAL_NEG	reduce using rule 192 (OPTIONAL-50)
	OP05_MATH_NEG_LPAREN	reduce using rule 192 (OPTIONAL-50)
	OP10_NAMED_UNARY	reduce using rule 192 (OPTIONAL-50)
	OP10_STRINGIFY_UNARY	reduce using rule 192 (OPTIONAL-50)
	OP22_LOGICAL_NOT	reduce using rule 192 (OPTIONAL-50)
	VARIABLE_SYMBOL	reduce using rule 192 (OPTIONAL-50)
	WORD	reduce using rule 192 (OPTIONAL-50)
	WORD_SCOPED	reduce using rule 192 (OPTIONAL-50)

	TypeInner	go to state 287
	OPTIONAL-50	go to state 286

State 252:

	STAR-52 -> STAR-52 . PAREN-51	(Rule 198)
	HashReference -> LBRACE HashEntry STAR-52 . '}'	(Rule 200)

	'}'	shift, and go to state 288
	OP21_LIST_COMMA	shift, and go to state 289

	PAREN-51	go to state 290

State 253:

	OperatorVoid -> OP01_PRINT OPTIONAL-34 ListElements . ';'	(Rule 118)

	';'	shift, and go to state 291

State 254:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements . ';'	(Rule 119)

	';'	shift, and go to state 292

State 255:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 161)

	VARIABLE_SYMBOL	shift, and go to state 293

State 256:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 160)

	LPAREN	shift, and go to state 294

State 257:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	LoopWhile -> 'while (' SubExpression . ')' CodeBlock	(Rule 162)

	')'	shift, and go to state 295
	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 151
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 139

State 258:

	Operator -> OP10_STRINGIFY_UNARY SubExpression ')' .	(Rule 101)

	$default	reduce using rule 101 (Operator)

State 259:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 172)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 173)

	';'	shift, and go to state 297
	OP19_VARIABLE_ASSIGN	shift, and go to state 296

State 260:

	PLUS-17 -> Operation .	(Rule 45)

	$default	reduce using rule 45 (PLUS-17)

State 261:

	PLUS-17 -> PLUS-17 . Operation	(Rule 44)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 . '}' ';'	(Rule 46)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'if ('	shift, and go to state 98
	'my'	shift, and go to state 114
	'undef'	shift, and go to state 84
	'}'	shift, and go to state 298
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 85
	OP01_NAMED_VOID	shift, and go to state 89
	OP01_OPEN	shift, and go to state 73
	OP01_PRINT	shift, and go to state 107
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP19_LOOP_CONTROL	shift, and go to state 101
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 70
	WORD_SCOPED	shift, and go to state 30

	'for my integer'	reduce using rule 144 (OPTIONAL-39)
	'foreach my'	reduce using rule 144 (OPTIONAL-39)
	'while ('	reduce using rule 144 (OPTIONAL-39)

	VariableModification	go to state 97
	Operator	go to state 76
	Operation	go to state 299
	Expression	go to state 95
	HashDereferenced	go to state 75
	Conditional	go to state 79
	ArrayDereferenced	go to state 72
	Variable	go to state 88
	HashReference	go to state 111
	OPTIONAL-39	go to state 108
	SubExpression	go to state 86
	Literal	go to state 109
	VariableDeclaration	go to state 91
	Statement	go to state 104
	ArrayReference	go to state 81
	WordScoped	go to state 80
	OperatorVoid	go to state 82
	PAREN-38	go to state 106
	LoopLabel	go to state 83

State 262:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	VARIABLE_SYMBOL	shift, and go to state 300

State 263:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';' .	(Rule 41)

	$default	reduce using rule 41 (Constant)

State 264:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 207)

	WORD	shift, and go to state 301

State 265:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties . OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'our %properties_class = ('	shift, and go to state 302

	'our'	reduce using rule 58 (OPTIONAL-23)
	LITERAL_NUMBER	reduce using rule 58 (OPTIONAL-23)

	OPTIONAL-23	go to state 303
	PropertiesClass	go to state 304

State 266:

	Properties -> 'our %properties = (' . Critic HashEntryTyped STAR-26 ')' ';'	(Rule 65)
	Properties -> 'our %properties = (' . ')' ';' Critic	(Rule 66)

	'## no critic qw('	shift, and go to state 4
	')'	shift, and go to state 305

	Critic	go to state 306

State 267:

	STAR-22 -> STAR-22 Constant .	(Rule 55)

	$default	reduce using rule 55 (STAR-22)

State 268:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL . OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	OP21_LIST_COMMA	shift, and go to state 307

State 269:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ')'	(Rule 86)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'my'	shift, and go to state 117
	'undef'	shift, and go to state 84
	KEYS_OR_VALUES	shift, and go to state 135
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP01_QW	shift, and go to state 162
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	SubExpression	go to state 164
	Literal	go to state 109
	Expression	go to state 122
	HashDereferenced	go to state 75
	ListElements	go to state 308
	HashReference	go to state 111
	Variable	go to state 123
	Operator	go to state 76
	TypeInner	go to state 136
	ArrayDereferenced	go to state 72
	ArrayReference	go to state 81
	WordScoped	go to state 80
	ListElement	go to state 163

State 270:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements . ')'	(Rule 84)

	')'	shift, and go to state 309

State 271:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression . ']'	(Rule 169)

	']'	shift, and go to state 310
	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 151
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 139

State 272:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 171)
	WordScoped -> WORD .	(Rule 203)

	'}'	shift, and go to state 311

	LPAREN	reduce using rule 203 (WordScoped)

State 273:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	VariableRetrieval -> OP02_HASH_THINARROW SubExpression . '}'	(Rule 170)

	'}'	shift, and go to state 312
	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 151
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 139

State 274:

	Expression -> WordScoped LPAREN OPTIONAL-36 ')' .	(Rule 128)

	$default	reduce using rule 128 (Expression)

State 275:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ';'	(Rule 121)

	';'	shift, and go to state 313

State 276:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON . VariableOrLiteral	(Rule 109)

	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	VARIABLE_SYMBOL	shift, and go to state 78

	VariableOrLiteral	go to state 314
	Literal	go to state 226
	Variable	go to state 224

State 277:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';' .	(Rule 175)

	$default	reduce using rule 175 (VariableModification)

State 278:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 174)

	$default	reduce using rule 174 (VariableModification)

State 279:

	Expression -> Variable OP02_METHOD_THINARROW WORD LPAREN . OPTIONAL-37 ')'	(Rule 129)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'my'	shift, and go to state 117
	'undef'	shift, and go to state 84
	KEYS_OR_VALUES	shift, and go to state 135
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP01_QW	shift, and go to state 162
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	')'	reduce using rule 126 (OPTIONAL-37)

	ArrayDereferenced	go to state 72
	TypeInner	go to state 136
	ListElement	go to state 163
	WordScoped	go to state 80
	ArrayReference	go to state 81
	OPTIONAL-37	go to state 316
	Operator	go to state 76
	Variable	go to state 123
	ListElements	go to state 315
	HashReference	go to state 111
	HashDereferenced	go to state 75
	Expression	go to state 122
	Literal	go to state 109
	SubExpression	go to state 164

State 280:

	PLUS-48 -> PLUS-48 . WORD	(Rule 179)
	ListElements -> OP01_QW LPAREN PLUS-48 . ')'	(Rule 182)

	')'	shift, and go to state 317
	WORD	shift, and go to state 318

State 281:

	PLUS-48 -> WORD .	(Rule 180)

	$default	reduce using rule 180 (PLUS-48)

State 282:

	STAR-47 -> STAR-47 PAREN-46 .	(Rule 177)

	$default	reduce using rule 177 (STAR-47)

State 283:

	PAREN-46 -> OP21_LIST_COMMA . ListElement	(Rule 176)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'my'	shift, and go to state 117
	'undef'	shift, and go to state 84
	KEYS_OR_VALUES	shift, and go to state 135
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	ListElement	go to state 319
	WordScoped	go to state 80
	ArrayReference	go to state 81
	ArrayDereferenced	go to state 72
	TypeInner	go to state 136
	HashReference	go to state 111
	Operator	go to state 76
	Variable	go to state 123
	Expression	go to state 122
	Literal	go to state 109
	HashDereferenced	go to state 75
	SubExpression	go to state 164

State 284:

	CodeBlock -> LBRACE . PLUS-44 '}'	(Rule 165)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'if ('	shift, and go to state 98
	'my'	shift, and go to state 114
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 85
	OP01_NAMED_VOID	shift, and go to state 89
	OP01_OPEN	shift, and go to state 73
	OP01_PRINT	shift, and go to state 107
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP19_LOOP_CONTROL	shift, and go to state 101
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 70
	WORD_SCOPED	shift, and go to state 30

	'for my integer'	reduce using rule 144 (OPTIONAL-39)
	'foreach my'	reduce using rule 144 (OPTIONAL-39)
	'while ('	reduce using rule 144 (OPTIONAL-39)

	Expression	go to state 95
	Operation	go to state 320
	HashDereferenced	go to state 75
	Operator	go to state 76
	VariableModification	go to state 97
	Conditional	go to state 79
	PLUS-44	go to state 321
	ArrayDereferenced	go to state 72
	SubExpression	go to state 86
	Literal	go to state 109
	OPTIONAL-39	go to state 108
	HashReference	go to state 111
	Variable	go to state 88
	VariableDeclaration	go to state 91
	ArrayReference	go to state 81
	WordScoped	go to state 80
	Statement	go to state 104
	LoopLabel	go to state 83
	OperatorVoid	go to state 82
	PAREN-38	go to state 106

State 285:

	Conditional -> 'if (' SubExpression ')' CodeBlock . STAR-41 OPTIONAL-43	(Rule 156)

	$default	reduce using rule 152 (STAR-41)

	STAR-41	go to state 322

State 286:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-50 . SubExpression	(Rule 193)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	ArrayDereferenced	go to state 72
	ArrayReference	go to state 81
	WordScoped	go to state 80
	HashReference	go to state 111
	Operator	go to state 76
	Variable	go to state 123
	Literal	go to state 109
	HashDereferenced	go to state 75
	SubExpression	go to state 323
	Expression	go to state 122

State 287:

	OPTIONAL-50 -> TypeInner .	(Rule 191)

	$default	reduce using rule 191 (OPTIONAL-50)

State 288:

	HashReference -> LBRACE HashEntry STAR-52 '}' .	(Rule 200)

	$default	reduce using rule 200 (HashReference)

State 289:

	PAREN-51 -> OP21_LIST_COMMA . HashEntry	(Rule 197)

	'%{'	shift, and go to state 99
	WORD	shift, and go to state 178

	HashEntry	go to state 324
	HashDereferenced	go to state 179

State 290:

	STAR-52 -> STAR-52 PAREN-51 .	(Rule 198)

	$default	reduce using rule 198 (STAR-52)

State 291:

	OperatorVoid -> OP01_PRINT OPTIONAL-34 ListElements ';' .	(Rule 118)

	$default	reduce using rule 118 (OperatorVoid)

State 292:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ';' .	(Rule 119)

	$default	reduce using rule 119 (OperatorVoid)

State 293:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . LPAREN ListElements ')' CodeBlock	(Rule 161)

	LPAREN	shift, and go to state 325

State 294:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN . SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 160)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	HashReference	go to state 111
	Operator	go to state 76
	Variable	go to state 123
	Literal	go to state 109
	HashDereferenced	go to state 75
	Expression	go to state 122
	SubExpression	go to state 326
	ArrayDereferenced	go to state 72
	WordScoped	go to state 80
	ArrayReference	go to state 81

State 295:

	LoopWhile -> 'while (' SubExpression ')' . CodeBlock	(Rule 162)

	LBRACE	shift, and go to state 284

	CodeBlock	go to state 327

State 296:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 173)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	STDIN	shift, and go to state 239
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	SubExpressionOrStdin	go to state 328
	ArrayDereferenced	go to state 72
	WordScoped	go to state 80
	ArrayReference	go to state 81
	Variable	go to state 123
	Operator	go to state 76
	HashReference	go to state 111
	SubExpression	go to state 240
	Expression	go to state 122
	Literal	go to state 109
	HashDereferenced	go to state 75

State 297:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 172)

	$default	reduce using rule 172 (VariableDeclaration)

State 298:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' . ';'	(Rule 46)

	';'	shift, and go to state 329

State 299:

	PLUS-17 -> PLUS-17 Operation .	(Rule 44)

	$default	reduce using rule 44 (PLUS-17)

State 300:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	$default	reduce using rule 49 (STAR-19)

	STAR-19	go to state 330

State 301:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 207)

	OP19_VARIABLE_ASSIGN	shift, and go to state 331

State 302:

	PropertiesClass -> 'our %properties_class = (' . Critic HashEntryTyped STAR-28 ')' ';'	(Rule 70)

	'## no critic qw('	shift, and go to state 4

	Critic	go to state 332

State 303:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 . STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	$default	reduce using rule 60 (STAR-24)

	STAR-24	go to state 333

State 304:

	OPTIONAL-23 -> PropertiesClass .	(Rule 57)

	$default	reduce using rule 57 (OPTIONAL-23)

State 305:

	Properties -> 'our %properties = (' ')' . ';' Critic	(Rule 66)

	';'	shift, and go to state 334

State 306:

	Properties -> 'our %properties = (' Critic . HashEntryTyped STAR-26 ')' ';'	(Rule 65)

	'%{'	shift, and go to state 99
	WORD	shift, and go to state 336

	HashDereferenced	go to state 337
	HashEntryTyped	go to state 335

State 307:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA . LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	LITERAL_STRING	shift, and go to state 338

State 308:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ')'	(Rule 86)

	')'	shift, and go to state 339

State 309:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')' .	(Rule 84)

	$default	reduce using rule 84 (Operator)

State 310:

	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']' .	(Rule 169)

	$default	reduce using rule 169 (VariableRetrieval)

State 311:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 171)

	$default	reduce using rule 171 (VariableRetrieval)

State 312:

	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}' .	(Rule 170)

	$default	reduce using rule 170 (VariableRetrieval)

State 313:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';' .	(Rule 121)

	$default	reduce using rule 121 (OperatorVoid)

State 314:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral .	(Rule 109)

	$default	reduce using rule 109 (Operator)

State 315:

	OPTIONAL-37 -> ListElements .	(Rule 125)

	$default	reduce using rule 125 (OPTIONAL-37)

State 316:

	Expression -> Variable OP02_METHOD_THINARROW WORD LPAREN OPTIONAL-37 . ')'	(Rule 129)

	')'	shift, and go to state 340

State 317:

	ListElements -> OP01_QW LPAREN PLUS-48 ')' .	(Rule 182)

	$default	reduce using rule 182 (ListElements)

State 318:

	PLUS-48 -> PLUS-48 WORD .	(Rule 179)

	$default	reduce using rule 179 (PLUS-48)

State 319:

	PAREN-46 -> OP21_LIST_COMMA ListElement .	(Rule 176)

	$default	reduce using rule 176 (PAREN-46)

State 320:

	PLUS-44 -> Operation .	(Rule 164)

	$default	reduce using rule 164 (PLUS-44)

State 321:

	PLUS-44 -> PLUS-44 . Operation	(Rule 163)
	CodeBlock -> LBRACE PLUS-44 . '}'	(Rule 165)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'if ('	shift, and go to state 98
	'my'	shift, and go to state 114
	'undef'	shift, and go to state 84
	'}'	shift, and go to state 342
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 85
	OP01_NAMED_VOID	shift, and go to state 89
	OP01_OPEN	shift, and go to state 73
	OP01_PRINT	shift, and go to state 107
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP19_LOOP_CONTROL	shift, and go to state 101
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 70
	WORD_SCOPED	shift, and go to state 30

	'for my integer'	reduce using rule 144 (OPTIONAL-39)
	'foreach my'	reduce using rule 144 (OPTIONAL-39)
	'while ('	reduce using rule 144 (OPTIONAL-39)

	WordScoped	go to state 80
	ArrayReference	go to state 81
	Statement	go to state 104
	LoopLabel	go to state 83
	OperatorVoid	go to state 82
	PAREN-38	go to state 106
	SubExpression	go to state 86
	Literal	go to state 109
	OPTIONAL-39	go to state 108
	HashReference	go to state 111
	Variable	go to state 88
	VariableDeclaration	go to state 91
	ArrayDereferenced	go to state 72
	Operation	go to state 341
	Expression	go to state 95
	HashDereferenced	go to state 75
	VariableModification	go to state 97
	Operator	go to state 76
	Conditional	go to state 79

State 322:

	STAR-41 -> STAR-41 . PAREN-40	(Rule 151)
	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-41 . OPTIONAL-43	(Rule 156)

	'else'	shift, and go to state 346
	'elsif ('	shift, and go to state 344

	$end	reduce using rule 155 (OPTIONAL-43)
	'%{'	reduce using rule 155 (OPTIONAL-43)
	'@{'	reduce using rule 155 (OPTIONAL-43)
	'for my integer'	reduce using rule 155 (OPTIONAL-43)
	'foreach my'	reduce using rule 155 (OPTIONAL-43)
	'if ('	reduce using rule 155 (OPTIONAL-43)
	'my'	reduce using rule 155 (OPTIONAL-43)
	'undef'	reduce using rule 155 (OPTIONAL-43)
	'while ('	reduce using rule 155 (OPTIONAL-43)
	'}'	reduce using rule 155 (OPTIONAL-43)
	LBRACE	reduce using rule 155 (OPTIONAL-43)
	LBRACKET	reduce using rule 155 (OPTIONAL-43)
	LITERAL_NUMBER	reduce using rule 155 (OPTIONAL-43)
	LITERAL_STRING	reduce using rule 155 (OPTIONAL-43)
	LPAREN	reduce using rule 155 (OPTIONAL-43)
	OP01_CLOSE	reduce using rule 155 (OPTIONAL-43)
	OP01_NAMED	reduce using rule 155 (OPTIONAL-43)
	OP01_NAMED_VOID	reduce using rule 155 (OPTIONAL-43)
	OP01_OPEN	reduce using rule 155 (OPTIONAL-43)
	OP01_PRINT	reduce using rule 155 (OPTIONAL-43)
	OP03_MATH_INC_DEC	reduce using rule 155 (OPTIONAL-43)
	OP05_LOGICAL_NEG	reduce using rule 155 (OPTIONAL-43)
	OP05_MATH_NEG_LPAREN	reduce using rule 155 (OPTIONAL-43)
	OP10_NAMED_UNARY	reduce using rule 155 (OPTIONAL-43)
	OP10_STRINGIFY_UNARY	reduce using rule 155 (OPTIONAL-43)
	OP19_LOOP_CONTROL	reduce using rule 155 (OPTIONAL-43)
	OP22_LOGICAL_NOT	reduce using rule 155 (OPTIONAL-43)
	VARIABLE_SYMBOL	reduce using rule 155 (OPTIONAL-43)
	WORD	reduce using rule 155 (OPTIONAL-43)
	WORD_SCOPED	reduce using rule 155 (OPTIONAL-43)

	OPTIONAL-43	go to state 347
	PAREN-40	go to state 343
	PAREN-42	go to state 345

State 323:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-50 SubExpression .	(Rule 193)

	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 151
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 139

	'}'	reduce using rule 193 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 193 (HashEntry)

State 324:

	PAREN-51 -> OP21_LIST_COMMA HashEntry .	(Rule 197)

	$default	reduce using rule 197 (PAREN-51)

State 325:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN . ListElements ')' CodeBlock	(Rule 161)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'my'	shift, and go to state 117
	'undef'	shift, and go to state 84
	KEYS_OR_VALUES	shift, and go to state 135
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP01_QW	shift, and go to state 162
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	Variable	go to state 123
	Operator	go to state 76
	HashReference	go to state 111
	ListElements	go to state 348
	HashDereferenced	go to state 75
	Expression	go to state 122
	Literal	go to state 109
	SubExpression	go to state 164
	ArrayDereferenced	go to state 72
	TypeInner	go to state 136
	ListElement	go to state 163
	ArrayReference	go to state 81
	WordScoped	go to state 80

State 326:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression . OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 160)

	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 349
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 139

State 327:

	LoopWhile -> 'while (' SubExpression ')' CodeBlock .	(Rule 162)

	$default	reduce using rule 162 (LoopWhile)

State 328:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 173)

	';'	shift, and go to state 350

State 329:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';' .	(Rule 46)

	$default	reduce using rule 46 (Subroutine)

State 330:

	STAR-19 -> STAR-19 . PAREN-18	(Rule 48)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	')'	shift, and go to state 351
	OP21_LIST_COMMA	shift, and go to state 352

	PAREN-18	go to state 353

State 331:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 207)

	$default	reduce using rule 207 (TypeInner)

State 332:

	PropertiesClass -> 'our %properties_class = (' Critic . HashEntryTyped STAR-28 ')' ';'	(Rule 70)

	'%{'	shift, and go to state 99
	WORD	shift, and go to state 336

	HashDereferenced	go to state 337
	HashEntryTyped	go to state 354

State 333:

	STAR-24 -> STAR-24 . MethodOrSubroutine	(Rule 59)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 . LITERAL_NUMBER ';'	(Rule 61)

	'our'	shift, and go to state 355
	LITERAL_NUMBER	shift, and go to state 359

	Subroutine	go to state 356
	Method	go to state 358
	MethodOrSubroutine	go to state 357

State 334:

	Properties -> 'our %properties = (' ')' ';' . Critic	(Rule 66)

	'## no critic qw('	shift, and go to state 4

	Critic	go to state 360

State 335:

	Properties -> 'our %properties = (' Critic HashEntryTyped . STAR-26 ')' ';'	(Rule 65)

	$default	reduce using rule 64 (STAR-26)

	STAR-26	go to state 361

State 336:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner SubExpression	(Rule 195)

	OP20_HASH_FATARROW	shift, and go to state 362

State 337:

	HashEntryTyped -> HashDereferenced .	(Rule 196)

	$default	reduce using rule 196 (HashEntryTyped)

State 338:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING . OP21_LIST_COMMA SubExpression	(Rule 87)

	OP21_LIST_COMMA	shift, and go to state 363

State 339:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' .	(Rule 86)

	$default	reduce using rule 86 (Operator)

State 340:

	Expression -> Variable OP02_METHOD_THINARROW WORD LPAREN OPTIONAL-37 ')' .	(Rule 129)

	$default	reduce using rule 129 (Expression)

State 341:

	PLUS-44 -> PLUS-44 Operation .	(Rule 163)

	$default	reduce using rule 163 (PLUS-44)

State 342:

	CodeBlock -> LBRACE PLUS-44 '}' .	(Rule 165)

	$default	reduce using rule 165 (CodeBlock)

State 343:

	STAR-41 -> STAR-41 PAREN-40 .	(Rule 151)

	$default	reduce using rule 151 (STAR-41)

State 344:

	PAREN-40 -> 'elsif (' . SubExpression ')' CodeBlock	(Rule 150)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	WordScoped	go to state 80
	ArrayReference	go to state 81
	ArrayDereferenced	go to state 72
	SubExpression	go to state 364
	Literal	go to state 109
	HashDereferenced	go to state 75
	Expression	go to state 122
	Variable	go to state 123
	Operator	go to state 76
	HashReference	go to state 111

State 345:

	OPTIONAL-43 -> PAREN-42 .	(Rule 154)

	$default	reduce using rule 154 (OPTIONAL-43)

State 346:

	PAREN-42 -> 'else' . CodeBlock	(Rule 153)

	LBRACE	shift, and go to state 284

	CodeBlock	go to state 365

State 347:

	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-41 OPTIONAL-43 .	(Rule 156)

	$default	reduce using rule 156 (Conditional)

State 348:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements . ')' CodeBlock	(Rule 161)

	')'	shift, and go to state 366

State 349:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 108)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE . SubExpression ')' CodeBlock	(Rule 160)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	ArrayReference	go to state 81
	WordScoped	go to state 80
	ArrayDereferenced	go to state 72
	HashReference	go to state 111
	Operator	go to state 76
	Variable	go to state 123
	Literal	go to state 109
	HashDereferenced	go to state 75
	SubExpression	go to state 367
	Expression	go to state 122

State 350:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 173)

	$default	reduce using rule 173 (VariableDeclaration)

State 351:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	OP19_VARIABLE_ASSIGN	shift, and go to state 368

State 352:

	PAREN-18 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 47)

	'my'	shift, and go to state 369

State 353:

	STAR-19 -> STAR-19 PAREN-18 .	(Rule 48)

	$default	reduce using rule 48 (STAR-19)

State 354:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped . STAR-28 ')' ';'	(Rule 70)

	$default	reduce using rule 69 (STAR-28)

	STAR-28	go to state 370

State 355:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)
	Method -> 'our' . TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	TYPE_METHOD	shift, and go to state 371
	WORD	shift, and go to state 53

	Type	go to state 54

State 356:

	MethodOrSubroutine -> Subroutine .	(Rule 81)

	$default	reduce using rule 81 (MethodOrSubroutine)

State 357:

	STAR-24 -> STAR-24 MethodOrSubroutine .	(Rule 59)

	$default	reduce using rule 59 (STAR-24)

State 358:

	MethodOrSubroutine -> Method .	(Rule 80)

	$default	reduce using rule 80 (MethodOrSubroutine)

State 359:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER . ';'	(Rule 61)

	';'	shift, and go to state 372

State 360:

	Properties -> 'our %properties = (' ')' ';' Critic .	(Rule 66)

	$default	reduce using rule 66 (Properties)

State 361:

	STAR-26 -> STAR-26 . PAREN-25	(Rule 63)
	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 . ')' ';'	(Rule 65)

	')'	shift, and go to state 374
	OP21_LIST_COMMA	shift, and go to state 375

	PAREN-25	go to state 373

State 362:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner SubExpression	(Rule 195)

	'my'	shift, and go to state 117

	TypeInner	go to state 376

State 363:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA . SubExpression	(Rule 87)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	Expression	go to state 122
	HashDereferenced	go to state 75
	SubExpression	go to state 377
	Literal	go to state 109
	HashReference	go to state 111
	Operator	go to state 76
	Variable	go to state 123
	ArrayDereferenced	go to state 72
	WordScoped	go to state 80
	ArrayReference	go to state 81

State 364:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	PAREN-40 -> 'elsif (' SubExpression . ')' CodeBlock	(Rule 150)

	')'	shift, and go to state 378
	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 151
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 139

State 365:

	PAREN-42 -> 'else' CodeBlock .	(Rule 153)

	$default	reduce using rule 153 (PAREN-42)

State 366:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements ')' . CodeBlock	(Rule 161)

	LBRACE	shift, and go to state 284

	CodeBlock	go to state 379

State 367:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression . ')' CodeBlock	(Rule 160)

	')'	shift, and go to state 380
	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 150

	OP17_LIST_RANGE	error (nonassociative)

	OP18_TERNARY	reduce using rule 108 (Operator)
	OP23_LOGICAL_AND	reduce using rule 108 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 108 (Operator)

State 368:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 50)

	'@_;'	shift, and go to state 381

State 369:

	PAREN-18 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 47)

	WORD	shift, and go to state 53

	Type	go to state 382

State 370:

	STAR-28 -> STAR-28 . PAREN-27	(Rule 68)
	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 . ')' ';'	(Rule 70)

	')'	shift, and go to state 383
	OP21_LIST_COMMA	shift, and go to state 385

	PAREN-27	go to state 384

State 371:

	Method -> 'our' TYPE_METHOD . VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	VARIABLE_SYMBOL	shift, and go to state 386

State 372:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';' .	(Rule 61)

	$default	reduce using rule 61 (Class)

State 373:

	STAR-26 -> STAR-26 PAREN-25 .	(Rule 63)

	$default	reduce using rule 63 (STAR-26)

State 374:

	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 ')' . ';'	(Rule 65)

	';'	shift, and go to state 387

State 375:

	PAREN-25 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 62)

	'%{'	shift, and go to state 99
	WORD	shift, and go to state 336

	HashDereferenced	go to state 337
	HashEntryTyped	go to state 388

State 376:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . SubExpression	(Rule 195)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 125
	OP01_OPEN	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 29
	WORD_SCOPED	shift, and go to state 30

	ArrayDereferenced	go to state 72
	WordScoped	go to state 80
	ArrayReference	go to state 81
	Variable	go to state 123
	Operator	go to state 76
	HashReference	go to state 111
	HashDereferenced	go to state 75
	Literal	go to state 109
	SubExpression	go to state 389
	Expression	go to state 122

State 377:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression .	(Rule 87)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 151
	OP18_TERNARY	shift, and go to state 143

	')'	reduce using rule 87 (Operator)
	';'	reduce using rule 87 (Operator)
	']'	reduce using rule 87 (Operator)
	'}'	reduce using rule 87 (Operator)
	OP21_LIST_COMMA	reduce using rule 87 (Operator)
	OP23_LOGICAL_AND	reduce using rule 87 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 87 (Operator)

State 378:

	PAREN-40 -> 'elsif (' SubExpression ')' . CodeBlock	(Rule 150)

	LBRACE	shift, and go to state 284

	CodeBlock	go to state 390

State 379:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock .	(Rule 161)

	$default	reduce using rule 161 (LoopForEach)

State 380:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' . CodeBlock	(Rule 160)

	LBRACE	shift, and go to state 284

	CodeBlock	go to state 391

State 381:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 50)

	$default	reduce using rule 50 (SubroutineArguments)

State 382:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 47)

	VARIABLE_SYMBOL	shift, and go to state 392

State 383:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 ')' . ';'	(Rule 70)

	';'	shift, and go to state 393

State 384:

	STAR-28 -> STAR-28 PAREN-27 .	(Rule 68)

	$default	reduce using rule 68 (STAR-28)

State 385:

	PAREN-27 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 67)

	'%{'	shift, and go to state 99
	WORD	shift, and go to state 336

	HashDereferenced	go to state 337
	HashEntryTyped	go to state 394

State 386:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL . '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	'= sub {'	shift, and go to state 395

State 387:

	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 ')' ';' .	(Rule 65)

	$default	reduce using rule 65 (Properties)

State 388:

	PAREN-25 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 62)

	$default	reduce using rule 62 (PAREN-25)

State 389:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression .	(Rule 195)

	OP04_MATH_POW	shift, and go to state 142
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 152
	OP08_MATH_ADD_SUB	shift, and go to state 141
	OP08_STRING_CAT	shift, and go to state 154
	OP09_BITWISE_SHIFT	shift, and go to state 144
	OP11_COMPARE_LT_GT	shift, and go to state 145
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 151
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 139

	')'	reduce using rule 195 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 195 (HashEntryTyped)

State 390:

	PAREN-40 -> 'elsif (' SubExpression ')' CodeBlock .	(Rule 150)

	$default	reduce using rule 150 (PAREN-40)

State 391:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock .	(Rule 160)

	$default	reduce using rule 160 (LoopFor)

State 392:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 47)

	$default	reduce using rule 47 (PAREN-18)

State 393:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 ')' ';' .	(Rule 70)

	$default	reduce using rule 70 (PropertiesClass)

State 394:

	PAREN-27 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 67)

	$default	reduce using rule 67 (PAREN-27)

State 395:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' . OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	'( my'	shift, and go to state 398

	'%{'	reduce using rule 72 (OPTIONAL-29)
	'@{'	reduce using rule 72 (OPTIONAL-29)
	'for my integer'	reduce using rule 72 (OPTIONAL-29)
	'foreach my'	reduce using rule 72 (OPTIONAL-29)
	'if ('	reduce using rule 72 (OPTIONAL-29)
	'my'	reduce using rule 72 (OPTIONAL-29)
	'undef'	reduce using rule 72 (OPTIONAL-29)
	'while ('	reduce using rule 72 (OPTIONAL-29)
	LBRACE	reduce using rule 72 (OPTIONAL-29)
	LBRACKET	reduce using rule 72 (OPTIONAL-29)
	LITERAL_NUMBER	reduce using rule 72 (OPTIONAL-29)
	LITERAL_STRING	reduce using rule 72 (OPTIONAL-29)
	LPAREN	reduce using rule 72 (OPTIONAL-29)
	OP01_CLOSE	reduce using rule 72 (OPTIONAL-29)
	OP01_NAMED	reduce using rule 72 (OPTIONAL-29)
	OP01_NAMED_VOID	reduce using rule 72 (OPTIONAL-29)
	OP01_OPEN	reduce using rule 72 (OPTIONAL-29)
	OP01_PRINT	reduce using rule 72 (OPTIONAL-29)
	OP03_MATH_INC_DEC	reduce using rule 72 (OPTIONAL-29)
	OP05_LOGICAL_NEG	reduce using rule 72 (OPTIONAL-29)
	OP05_MATH_NEG_LPAREN	reduce using rule 72 (OPTIONAL-29)
	OP10_NAMED_UNARY	reduce using rule 72 (OPTIONAL-29)
	OP10_STRINGIFY_UNARY	reduce using rule 72 (OPTIONAL-29)
	OP19_LOOP_CONTROL	reduce using rule 72 (OPTIONAL-29)
	OP22_LOGICAL_NOT	reduce using rule 72 (OPTIONAL-29)
	VARIABLE_SYMBOL	reduce using rule 72 (OPTIONAL-29)
	WORD	reduce using rule 72 (OPTIONAL-29)
	WORD_SCOPED	reduce using rule 72 (OPTIONAL-29)

	MethodArguments	go to state 396
	OPTIONAL-29	go to state 397

State 396:

	OPTIONAL-29 -> MethodArguments .	(Rule 71)

	$default	reduce using rule 71 (OPTIONAL-29)

State 397:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 . PLUS-30 '}' ';'	(Rule 75)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'if ('	shift, and go to state 98
	'my'	shift, and go to state 114
	'undef'	shift, and go to state 84
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 85
	OP01_NAMED_VOID	shift, and go to state 89
	OP01_OPEN	shift, and go to state 73
	OP01_PRINT	shift, and go to state 107
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP19_LOOP_CONTROL	shift, and go to state 101
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 70
	WORD_SCOPED	shift, and go to state 30

	'for my integer'	reduce using rule 144 (OPTIONAL-39)
	'foreach my'	reduce using rule 144 (OPTIONAL-39)
	'while ('	reduce using rule 144 (OPTIONAL-39)

	Statement	go to state 104
	WordScoped	go to state 80
	ArrayReference	go to state 81
	OperatorVoid	go to state 82
	PAREN-38	go to state 106
	LoopLabel	go to state 83
	OPTIONAL-39	go to state 108
	SubExpression	go to state 86
	Literal	go to state 109
	Variable	go to state 88
	HashReference	go to state 111
	VariableDeclaration	go to state 91
	PLUS-30	go to state 399
	ArrayDereferenced	go to state 72
	Operation	go to state 400
	Expression	go to state 95
	HashDereferenced	go to state 75
	VariableModification	go to state 97
	Operator	go to state 76
	Conditional	go to state 79

State 398:

	MethodArguments -> '( my' . TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	TYPE_CLASS_OR_SELF	shift, and go to state 401

State 399:

	PLUS-30 -> PLUS-30 . Operation	(Rule 73)
	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 . '}' ';'	(Rule 75)

	'%{'	shift, and go to state 99
	'@{'	shift, and go to state 74
	'if ('	shift, and go to state 98
	'my'	shift, and go to state 114
	'undef'	shift, and go to state 84
	'}'	shift, and go to state 403
	LBRACE	shift, and go to state 102
	LBRACKET	shift, and go to state 93
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 103
	LPAREN	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 92
	OP01_NAMED	shift, and go to state 85
	OP01_NAMED_VOID	shift, and go to state 89
	OP01_OPEN	shift, and go to state 73
	OP01_PRINT	shift, and go to state 107
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 71
	OP10_NAMED_UNARY	shift, and go to state 87
	OP10_STRINGIFY_UNARY	shift, and go to state 112
	OP19_LOOP_CONTROL	shift, and go to state 101
	OP22_LOGICAL_NOT	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 78
	WORD	shift, and go to state 70
	WORD_SCOPED	shift, and go to state 30

	'for my integer'	reduce using rule 144 (OPTIONAL-39)
	'foreach my'	reduce using rule 144 (OPTIONAL-39)
	'while ('	reduce using rule 144 (OPTIONAL-39)

	PAREN-38	go to state 106
	OperatorVoid	go to state 82
	LoopLabel	go to state 83
	Statement	go to state 104
	WordScoped	go to state 80
	ArrayReference	go to state 81
	VariableDeclaration	go to state 91
	OPTIONAL-39	go to state 108
	SubExpression	go to state 86
	Literal	go to state 109
	Variable	go to state 88
	HashReference	go to state 111
	ArrayDereferenced	go to state 72
	Conditional	go to state 79
	Expression	go to state 95
	HashDereferenced	go to state 75
	Operation	go to state 402
	VariableModification	go to state 97
	Operator	go to state 76

State 400:

	PLUS-30 -> Operation .	(Rule 74)

	$default	reduce using rule 74 (PLUS-30)

State 401:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF . STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	$default	reduce using rule 78 (STAR-32)

	STAR-32	go to state 404

State 402:

	PLUS-30 -> PLUS-30 Operation .	(Rule 73)

	$default	reduce using rule 73 (PLUS-30)

State 403:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' . ';'	(Rule 75)

	';'	shift, and go to state 405

State 404:

	STAR-32 -> STAR-32 . PAREN-31	(Rule 77)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	')'	shift, and go to state 407
	OP21_LIST_COMMA	shift, and go to state 406

	PAREN-31	go to state 408

State 405:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';' .	(Rule 75)

	$default	reduce using rule 75 (Method)

State 406:

	PAREN-31 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 76)

	'my'	shift, and go to state 409

State 407:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	OP19_VARIABLE_ASSIGN	shift, and go to state 410

State 408:

	STAR-32 -> STAR-32 PAREN-31 .	(Rule 77)

	$default	reduce using rule 77 (STAR-32)

State 409:

	PAREN-31 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 76)

	WORD	shift, and go to state 53

	Type	go to state 411

State 410:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 79)

	'@_;'	shift, and go to state 412

State 411:

	PAREN-31 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 76)

	VARIABLE_SYMBOL	shift, and go to state 413

State 412:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 79)

	$default	reduce using rule 79 (MethodArguments)

State 413:

	PAREN-31 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 76)

	$default	reduce using rule 76 (PAREN-31)


Summary:
--------
Number of rules         : 212
Number of terminals     : 87
Number of non-terminals : 101
Number of states        : 414
